//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Fri Aug  1 03:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64

.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 output_buffer_nrm[1];
.global .align 1 .b8 output_buffer_world[1];
.global .align 1 .b8 output_buffer_diffuse[1];
.global .align 1 .b8 output_buffer_trap[1];
.global .align 1 .b8 output_buffer_depth[1];
.global .align 1 .b8 output_buffer_iteration[1];
.global .align 8 .b8 eye[12];
.global .align 4 .f32 delta;
.global .align 4 .f32 DEL;
.global .align 4 .u32 max_iterations;
.global .align 4 .f32 global_t;
.global .align 4 .f32 relative_t;
.global .align 8 .b8 ray[36];
.global .align 8 .b8 normal[12];
.global .align 4 .u32 iterations;
.global .align 8 .b8 orbitTrap[12];
.global .align 8 .b8 shading_normal[12];
.global .align 4 .b8 shading_normal2[12];
.global .align 8 .b8 geometric_normal[12];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 normalmatrix[64];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 8 .b8 top_object[4];
.global .align 8 .b8 top_shadower[4];
.global .align 4 .f32 isect_t;
.global .align 4 .u32 pathtrace_ray_type;
.global .align 4 .u32 pathtrace_shadow_ray_type;
.global .align 4 .u32 rr_begin_depth;
.global .align 4 .u32 frame_number;
.global .align 4 .u32 sqrt_num_samples;
.global .align 4 .f32 t_hit;
.global .align 8 .b8 TileSize[8];
.global .align 8 .b8 NoOfTiles[8];
.global .align 4 .b8 bg_color[12];
.global .align 4 .b8 hit_hook[4];
.global .align 16 .b8 current_prd[144];
.global .align 16 .b8 prd_radiance[144];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 emission_color[12];
.global .align 4 .b8 current_prd_shadow[24];
.global .align 8 .b8 diffuse_color[12];
.global .texref envmap;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 time_view_scale = 0f358637BD;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5deltaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3DELE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14max_iterationsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8global_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10relative_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10iterationsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9orbitTrapE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15shading_normal2E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15time_view_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12normalmatrixE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12top_shadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7isect_tE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18pathtrace_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo25pathtrace_shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14rr_begin_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16sqrt_num_samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8TileSizeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9NoOfTilesE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8hit_hookE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11current_prdE[8] = {82, 97, 121, 0, 144, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 144, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14emission_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18current_prd_shadowE[8] = {82, 97, 121, 0, 24, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13diffuse_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5deltaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3DELE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14max_iterationsE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8global_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10relative_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10iterationsE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9orbitTrapE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15shading_normal2E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15time_view_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12normalmatrixE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12top_shadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7isect_tE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18pathtrace_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename25pathtrace_shadow_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14rr_begin_depthE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16sqrt_num_samplesE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8TileSizeE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9NoOfTilesE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8hit_hookE[6] = {99, 97, 108, 108, 84, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11current_prdE[21] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[21] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14emission_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18current_prd_shadowE[28] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 112, 97, 116, 104, 116, 114, 97, 99, 101, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13diffuse_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5deltaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3DELE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14max_iterationsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8global_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10relative_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10iterationsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9orbitTrapE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15shading_normal2E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15time_view_scaleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12normalmatrixE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12top_shadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7isect_tE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18pathtrace_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum25pathtrace_shadow_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14rr_begin_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16sqrt_num_samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8TileSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9NoOfTilesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8hit_hookE = 4921;
.global .align 4 .u32 _ZN21rti_internal_typeenum11current_prdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14emission_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18current_prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13diffuse_colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5deltaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3DELE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14max_iterationsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8global_tE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10relative_tE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10iterationsE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 105, 116, 101, 114, 97, 116, 105, 111, 110, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9orbitTrapE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 111, 114, 98, 105, 116, 84, 114, 97, 112, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15shading_normal2E[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15time_view_scaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12normalmatrixE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12top_shadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7isect_tE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18pathtrace_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic25pathtrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14rr_begin_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16sqrt_num_samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8TileSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9NoOfTilesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8hit_hookE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11current_prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14emission_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18current_prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13diffuse_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5deltaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3DELE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14max_iterationsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8global_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10relative_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10iterationsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9orbitTrapE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15shading_normal2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15time_view_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12normalmatrixE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12top_shadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7isect_tE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18pathtrace_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation25pathtrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14rr_begin_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16sqrt_num_samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8TileSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9NoOfTilesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8hit_hookE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11current_prdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14emission_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18current_prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13diffuse_colorE[1];

.visible .func  (.param .b32 func_retval0) _Z7degreesf(
	.param .b32 _Z7degreesf_param_0
)
{
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z7degreesf_param_0];
	cvt.ftz.f64.f32	%fd1, %f1;
	mul.f64 	%fd2, %fd1, 0d404CA5DC1A63C1F8;
	cvt.rn.ftz.f32.f64	%f2, %fd2;
	st.param.f32	[func_retval0+0], %f2;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z7radiansf(
	.param .b32 _Z7radiansf_param_0
)
{
	.reg .f32 	%f<3>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z7radiansf_param_0];
	cvt.ftz.f64.f32	%fd1, %f1;
	mul.f64 	%fd2, %fd1, 0d3F91DF46A2529D39;
	cvt.rn.ftz.f32.f64	%f2, %fd2;
	st.param.f32	[func_retval0+0], %f2;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z12insideSphere6float3S_fPf(
	.param .align 4 .b8 _Z12insideSphere6float3S_fPf_param_0[12],
	.param .align 4 .b8 _Z12insideSphere6float3S_fPf_param_1[12],
	.param .b32 _Z12insideSphere6float3S_fPf_param_2,
	.param .b64 _Z12insideSphere6float3S_fPf_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<16>;
	.reg .s64 	%rd<2>;


	ld.param.f32 	%f1, [_Z12insideSphere6float3S_fPf_param_0+8];
	ld.param.f32 	%f2, [_Z12insideSphere6float3S_fPf_param_0+4];
	ld.param.f32 	%f3, [_Z12insideSphere6float3S_fPf_param_0];
	ld.param.f32 	%f4, [_Z12insideSphere6float3S_fPf_param_1+8];
	ld.param.f32 	%f5, [_Z12insideSphere6float3S_fPf_param_1+4];
	ld.param.f32 	%f6, [_Z12insideSphere6float3S_fPf_param_1];
	ld.param.f32 	%f7, [_Z12insideSphere6float3S_fPf_param_2];
	ld.param.u64 	%rd1, [_Z12insideSphere6float3S_fPf_param_3];
	sub.ftz.f32 	%f8, %f3, %f6;
	sub.ftz.f32 	%f9, %f2, %f5;
	sub.ftz.f32 	%f10, %f1, %f4;
	mul.ftz.f32 	%f11, %f9, %f9;
	fma.rn.ftz.f32 	%f12, %f8, %f8, %f11;
	fma.rn.ftz.f32 	%f13, %f10, %f10, %f12;
	sqrt.approx.ftz.f32 	%f14, %f13;
	sqrt.approx.ftz.f32 	%f15, %f7;
	st.f32 	[%rd1], %f14;
	setp.le.ftz.f32	%p1, %f14, %f15;
	selp.u32	%r1, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z8sdfCross6float3(
	.param .align 4 .b8 _Z8sdfCross6float3_param_0[12]
)
{
	.reg .f32 	%f<46>;


	ld.param.f32 	%f1, [_Z8sdfCross6float3_param_0+8];
	ld.param.f32 	%f2, [_Z8sdfCross6float3_param_0+4];
	ld.param.f32 	%f3, [_Z8sdfCross6float3_param_0];
	abs.ftz.f32 	%f4, %f3;
	abs.ftz.f32 	%f5, %f2;
	abs.ftz.f32 	%f6, %f1;
	add.ftz.f32 	%f7, %f4, 0fC61C4000;
	add.ftz.f32 	%f8, %f5, 0fBF800000;
	add.ftz.f32 	%f9, %f6, 0fBF800000;
	max.ftz.f32 	%f10, %f8, %f9;
	max.ftz.f32 	%f11, %f7, %f10;
	mov.f32 	%f12, 0f00000000;
	min.ftz.f32 	%f13, %f11, %f12;
	max.ftz.f32 	%f14, %f7, %f12;
	max.ftz.f32 	%f15, %f8, %f12;
	max.ftz.f32 	%f16, %f9, %f12;
	mul.ftz.f32 	%f17, %f15, %f15;
	fma.rn.ftz.f32 	%f18, %f14, %f14, %f17;
	fma.rn.ftz.f32 	%f19, %f16, %f16, %f18;
	sqrt.approx.ftz.f32 	%f20, %f19;
	add.ftz.f32 	%f21, %f13, %f20;
	add.ftz.f32 	%f22, %f6, 0fC61C4000;
	add.ftz.f32 	%f23, %f4, 0fBF800000;
	max.ftz.f32 	%f24, %f22, %f23;
	max.ftz.f32 	%f25, %f8, %f24;
	min.ftz.f32 	%f26, %f25, %f12;
	max.ftz.f32 	%f27, %f22, %f12;
	max.ftz.f32 	%f28, %f23, %f12;
	mul.ftz.f32 	%f29, %f27, %f27;
	fma.rn.ftz.f32 	%f30, %f15, %f15, %f29;
	mul.ftz.f32 	%f31, %f28, %f28;
	add.ftz.f32 	%f32, %f30, %f31;
	sqrt.approx.ftz.f32 	%f33, %f32;
	add.ftz.f32 	%f34, %f26, %f33;
	add.ftz.f32 	%f35, %f5, 0fC61C4000;
	max.ftz.f32 	%f36, %f23, %f35;
	max.ftz.f32 	%f37, %f9, %f36;
	min.ftz.f32 	%f38, %f37, %f12;
	max.ftz.f32 	%f39, %f35, %f12;
	fma.rn.ftz.f32 	%f40, %f16, %f16, %f31;
	fma.rn.ftz.f32 	%f41, %f39, %f39, %f40;
	sqrt.approx.ftz.f32 	%f42, %f41;
	add.ftz.f32 	%f43, %f38, %f42;
	min.ftz.f32 	%f44, %f34, %f43;
	min.ftz.f32 	%f45, %f21, %f44;
	st.param.f32	[func_retval0+0], %f45;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z6rotate6float2f(
	.param .align 8 .b8 _Z6rotate6float2f_param_0[8],
	.param .b32 _Z6rotate6float2f_param_1
)
{
	.reg .f32 	%f<11>;


	ld.param.f32 	%f1, [_Z6rotate6float2f_param_0];
	ld.param.f32 	%f2, [_Z6rotate6float2f_param_0+4];
	ld.param.f32 	%f3, [_Z6rotate6float2f_param_1];
	cos.approx.ftz.f32 	%f4, %f3;
	sin.approx.ftz.f32 	%f5, %f3;
	mul.ftz.f32 	%f6, %f5, %f2;
	fma.rn.ftz.f32 	%f7, %f4, %f1, %f6;
	mul.ftz.f32 	%f8, %f4, %f2;
	mul.ftz.f32 	%f9, %f1, %f5;
	sub.ftz.f32 	%f10, %f8, %f9;
	st.param.f32	[func_retval0+0], %f7;
	st.param.f32	[func_retval0+4], %f10;
	ret;
}

.visible .func  (.param .b32 func_retval0) _Z4hashf(
	.param .b32 _Z4hashf_param_0
)
{
	.reg .f32 	%f<6>;
	.reg .f64 	%fd<3>;


	ld.param.f32 	%f1, [_Z4hashf_param_0];
	sin.approx.ftz.f32 	%f2, %f1;
	cvt.ftz.f64.f32	%fd1, %f2;
	mul.f64 	%fd2, %fd1, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f3, %fd2;
	cvt.rmi.ftz.f32.f32	%f4, %f3;
	sub.ftz.f32 	%f5, %f3, %f4;
	st.param.f32	[func_retval0+0], %f5;
	ret;
}

.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z15cosineDirectionf6float3(
	.param .b32 _Z15cosineDirectionf6float3_param_0,
	.param .align 4 .b8 _Z15cosineDirectionf6float3_param_1[12]
)
{
	.reg .f32 	%f<44>;
	.reg .f64 	%fd<14>;


	ld.param.f32 	%f1, [_Z15cosineDirectionf6float3_param_1+4];
	ld.param.f32 	%f2, [_Z15cosineDirectionf6float3_param_1];
	ld.param.f32 	%f3, [_Z15cosineDirectionf6float3_param_1+8];
	add.ftz.f32 	%f4, %f3, 0f3F800000;
	mul.ftz.f32 	%f5, %f2, %f2;
	sub.ftz.f32 	%f6, %f4, %f5;
	mul.ftz.f32 	%f7, %f1, %f1;
	sub.ftz.f32 	%f8, %f4, %f7;
	neg.ftz.f32 	%f9, %f2;
	mul.ftz.f32 	%f10, %f1, %f9;
	rcp.approx.ftz.f32 	%f11, %f4;
	mul.ftz.f32 	%f12, %f6, %f11;
	mul.ftz.f32 	%f13, %f8, %f11;
	mul.ftz.f32 	%f14, %f10, %f11;
	ld.param.f32 	%f15, [_Z15cosineDirectionf6float3_param_0];
	cvt.ftz.f64.f32	%fd1, %f15;
	add.f64 	%fd2, %fd1, 0d40538EE978D4FDF4;
	cvt.rn.ftz.f32.f64	%f16, %fd2;
	sin.approx.ftz.f32 	%f17, %f16;
	cvt.ftz.f64.f32	%fd3, %f17;
	mul.f64 	%fd4, %fd3, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f18, %fd4;
	cvt.rmi.ftz.f32.f32	%f19, %f18;
	sub.ftz.f32 	%f20, %f18, %f19;
	add.f64 	%fd5, %fd1, 0d4025BEF9DB22D0E5;
	cvt.rn.ftz.f32.f64	%f21, %fd5;
	sin.approx.ftz.f32 	%f22, %f21;
	cvt.ftz.f64.f32	%fd6, %f22;
	mul.f64 	%fd7, %fd6, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f23, %fd7;
	cvt.rmi.ftz.f32.f32	%f24, %f23;
	sub.ftz.f32 	%f25, %f23, %f24;
	cvt.ftz.f64.f32	%fd8, %f25;
	mul.f64 	%fd9, %fd8, 0d401921FB3FA6DEFC;
	cvt.rn.ftz.f32.f64	%f26, %fd9;
	sqrt.approx.ftz.f32 	%f27, %f20;
	cos.approx.ftz.f32 	%f28, %f26;
	mul.ftz.f32 	%f29, %f28, %f9;
	sin.approx.ftz.f32 	%f30, %f26;
	mul.ftz.f32 	%f31, %f14, %f30;
	mul.ftz.f32 	%f32, %f13, %f30;
	fma.rn.ftz.f32 	%f33, %f12, %f28, %f31;
	fma.rn.ftz.f32 	%f34, %f14, %f28, %f32;
	mul.ftz.f32 	%f35, %f30, %f1;
	sub.ftz.f32 	%f36, %f29, %f35;
	cvt.ftz.f64.f32	%fd10, %f20;
	mov.f64 	%fd11, 0d3FF0000000000000;
	sub.f64 	%fd12, %fd11, %fd10;
	sqrt.rn.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f37, %fd13;
	mul.ftz.f32 	%f38, %f2, %f37;
	mul.ftz.f32 	%f39, %f1, %f37;
	mul.ftz.f32 	%f40, %f3, %f37;
	fma.rn.ftz.f32 	%f41, %f33, %f27, %f38;
	fma.rn.ftz.f32 	%f42, %f34, %f27, %f39;
	fma.rn.ftz.f32 	%f43, %f36, %f27, %f40;
	st.param.f32	[func_retval0+0], %f41;
	st.param.f32	[func_retval0+4], %f42;
	st.param.f32	[func_retval0+8], %f43;
	ret;
}

.visible .entry _Z9exceptionv(

)
{
	.reg .s32 	%r<33>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<31>;


	cvta.global.u64 	%rd2, output_buffer;
	ld.global.v2.u32 	{%r11, %r12}, [launch_index];
	cvt.u64.u32	%rd3, %r11;
	cvt.u64.u32	%rd4, %r12;
	mov.u32 	%r9, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r9, %r2, %rd3, %rd4, %rd30, %rd30);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	ld.global.f32 	%f2, [bad_color+8];
	ld.global.f32 	%f3, [bad_color+4];
	ld.global.f32 	%f4, [bad_color];
	st.v4.f32 	[%rd1], {%f4, %f3, %f2, %f1};
	cvta.global.u64 	%rd8, output_buffer_nrm;
	ld.global.v2.u32 	{%r15, %r16}, [launch_index];
	cvt.u64.u32	%rd9, %r15;
	cvt.u64.u32	%rd10, %r16;
	mov.u32 	%r10, 12;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r9, %r10, %rd9, %rd10, %rd30, %rd30);
	// inline asm
	mov.u32 	%r19, 0;
	st.u32 	[%rd7+8], %r19;
	st.u32 	[%rd7+4], %r19;
	st.u32 	[%rd7], %r19;
	cvta.global.u64 	%rd14, output_buffer_world;
	ld.global.v2.u32 	{%r20, %r21}, [launch_index];
	cvt.u64.u32	%rd15, %r20;
	cvt.u64.u32	%rd16, %r21;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r9, %r10, %rd15, %rd16, %rd30, %rd30);
	// inline asm
	st.u32 	[%rd13+8], %r19;
	st.u32 	[%rd13+4], %r19;
	st.u32 	[%rd13], %r19;
	cvta.global.u64 	%rd20, output_buffer_depth;
	ld.global.v2.u32 	{%r24, %r25}, [launch_index];
	cvt.u64.u32	%rd21, %r24;
	cvt.u64.u32	%rd22, %r25;
	mov.u32 	%r8, 4;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r9, %r8, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	mov.u32 	%r28, 1817103247;
	st.u32 	[%rd19], %r28;
	cvta.global.u64 	%rd26, output_buffer_trap;
	ld.global.v2.u32 	{%r29, %r30}, [launch_index];
	cvt.u64.u32	%rd27, %r29;
	cvt.u64.u32	%rd28, %r30;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r9, %r10, %rd27, %rd28, %rd30, %rd30);
	// inline asm
	st.u32 	[%rd25+8], %r19;
	st.u32 	[%rd25+4], %r19;
	st.u32 	[%rd25], %r19;
	ret;
}

.visible .entry _Z16pathtrace_camerav(

)
{
	.local .align 16 .b8 	__local_depot8[144];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<140>;
	.reg .f32 	%f<260>;
	.reg .s64 	%rd<139>;


	mov.u64 	%SPL, __local_depot8;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd9;
	cvta.global.u64 	%rd8, output_buffer;
	mov.u32 	%r11, 2;
	mov.u32 	%r12, 16;
	// inline asm
	call (%rd4, %rd5, %rd6, %rd7), _rt_buffer_get_size_64, (%rd8, %r11, %r12);
	// inline asm
	ld.global.v2.f32 	{%f77, %f78}, [TileSize];
	cvt.rzi.ftz.u32.f32	%r13, %f77;
	cvt.rzi.ftz.u32.f32	%r14, %f78;
	ld.global.v2.u32 	{%r15, %r16}, [NoOfTiles];
	ld.global.v2.u32 	{%r17, %r18}, [launch_index];
	mad.lo.s32 	%r21, %r15, %r13, %r17;
	mad.lo.s32 	%r24, %r16, %r14, %r18;
	cvt.rn.f32.u64	%f81, %rd4;
	cvt.rn.f32.u64	%f82, %rd5;
	rcp.approx.ftz.f32 	%f83, %f81;
	rcp.approx.ftz.f32 	%f84, %f82;
	add.ftz.f32 	%f85, %f83, %f83;
	add.ftz.f32 	%f86, %f84, %f84;
	cvt.rn.f32.u32	%f87, %r21;
	cvt.rn.f32.u32	%f88, %r24;
	fma.rn.ftz.f32 	%f1, %f87, %f85, 0fBF800000;
	fma.rn.ftz.f32 	%f2, %f88, %f86, 0fBF800000;
	ld.global.u32 	%r137, [sqrt_num_samples];
	cvt.rn.f32.u32	%f89, %r137;
	rcp.approx.ftz.f32 	%f90, %f89;
	mul.ftz.f32 	%f3, %f85, %f90;
	mul.ftz.f32 	%f4, %f86, %f90;
	mul.lo.s32 	%r138, %r137, %r137;
	cvt.u64.u32	%rd2, %r24;
	mul.lo.s64 	%rd10, %rd2, %rd4;
	cvt.u64.u32	%rd3, %r21;
	add.s64 	%rd11, %rd10, %rd3;
	cvt.u32.u64	%r25, %rd11;
	ld.global.u32 	%r26, [frame_number];
	shl.b32 	%r27, %r26, 4;
	add.s32 	%r28, %r27, -1556008596;
	shr.u32 	%r29, %r26, 5;
	add.s32 	%r30, %r29, -939442524;
	add.s32 	%r31, %r26, -1640531527;
	xor.b32  	%r32, %r28, %r31;
	xor.b32  	%r33, %r32, %r30;
	add.s32 	%r34, %r33, %r25;
	shl.b32 	%r35, %r34, 4;
	add.s32 	%r36, %r35, -1383041155;
	shr.u32 	%r37, %r34, 5;
	add.s32 	%r38, %r37, 2123724318;
	add.s32 	%r39, %r34, -1640531527;
	xor.b32  	%r40, %r36, %r39;
	xor.b32  	%r41, %r40, %r38;
	add.s32 	%r42, %r41, %r26;
	shl.b32 	%r43, %r42, 4;
	add.s32 	%r44, %r43, -1556008596;
	shr.u32 	%r45, %r42, 5;
	add.s32 	%r46, %r45, -939442524;
	add.s32 	%r47, %r42, 1013904242;
	xor.b32  	%r48, %r44, %r47;
	xor.b32  	%r49, %r48, %r46;
	add.s32 	%r50, %r49, %r34;
	shl.b32 	%r51, %r50, 4;
	add.s32 	%r52, %r51, -1383041155;
	shr.u32 	%r53, %r50, 5;
	add.s32 	%r54, %r53, 2123724318;
	add.s32 	%r55, %r50, 1013904242;
	xor.b32  	%r56, %r52, %r55;
	xor.b32  	%r57, %r56, %r54;
	add.s32 	%r58, %r57, %r42;
	shl.b32 	%r59, %r58, 4;
	add.s32 	%r60, %r59, -1556008596;
	shr.u32 	%r61, %r58, 5;
	add.s32 	%r62, %r61, -939442524;
	add.s32 	%r63, %r58, -626627285;
	xor.b32  	%r64, %r60, %r63;
	xor.b32  	%r65, %r64, %r62;
	add.s32 	%r66, %r65, %r50;
	shl.b32 	%r67, %r66, 4;
	add.s32 	%r68, %r67, -1383041155;
	shr.u32 	%r69, %r66, 5;
	add.s32 	%r70, %r69, 2123724318;
	add.s32 	%r71, %r66, -626627285;
	xor.b32  	%r72, %r68, %r71;
	xor.b32  	%r73, %r72, %r70;
	add.s32 	%r74, %r73, %r58;
	shl.b32 	%r75, %r74, 4;
	add.s32 	%r76, %r75, -1556008596;
	shr.u32 	%r77, %r74, 5;
	add.s32 	%r78, %r77, -939442524;
	add.s32 	%r79, %r74, 2027808484;
	xor.b32  	%r80, %r76, %r79;
	xor.b32  	%r81, %r80, %r78;
	add.s32 	%r139, %r81, %r66;
	mov.f32 	%f76, 0f00000000;
	mov.f32 	%f258, %f76;
	mov.f32 	%f257, %f76;
	mov.f32 	%f256, %f76;
	mov.f32 	%f255, %f76;
	mov.f32 	%f254, %f76;
	mov.f32 	%f253, %f76;
	mov.f32 	%f252, %f76;
	mov.f32 	%f251, %f76;
	mov.f32 	%f250, %f76;
	mov.f32 	%f249, %f76;
	mov.f32 	%f248, %f76;
	mov.f32 	%f247, %f76;
	mov.f32 	%f246, %f76;
	mov.f32 	%f245, %f76;
	mov.f32 	%f244, %f76;
	mov.f32 	%f243, %f76;
	mov.f32 	%f242, %f76;
	mov.f32 	%f259, %f76;

BB8_1:
	mov.f32 	%f22, %f259;
	rem.u32 	%r85, %r138, %r137;
	cvt.rn.f32.u32	%f99, %r85;
	mad.lo.s32 	%r86, %r139, 1664525, 1013904223;
	and.b32  	%r87, %r86, 16777215;
	cvt.rn.f32.u32	%f100, %r87;
	mov.f32 	%f101, 0f4B800000;
	div.approx.ftz.f32 	%f102, %f100, %f101;
	sub.ftz.f32 	%f103, %f99, %f102;
	div.u32 	%r88, %r138, %r137;
	cvt.rn.f32.u32	%f104, %r88;
	mad.lo.s32 	%r89, %r86, 1664525, 1013904223;
	and.b32  	%r90, %r89, 16777215;
	cvt.rn.f32.u32	%f105, %r90;
	div.approx.ftz.f32 	%f106, %f105, %f101;
	sub.ftz.f32 	%f107, %f104, %f106;
	fma.rn.ftz.f32 	%f108, %f103, %f3, %f1;
	fma.rn.ftz.f32 	%f109, %f107, %f4, %f2;
	ld.global.f32 	%f93, [eye+8];
	ld.global.v2.f32 	{%f110, %f111}, [eye];
	ld.global.f32 	%f112, [U];
	ld.global.f32 	%f113, [U+4];
	ld.global.f32 	%f114, [U+8];
	ld.global.f32 	%f115, [V];
	mul.ftz.f32 	%f116, %f115, %f109;
	ld.global.f32 	%f117, [V+4];
	mul.ftz.f32 	%f118, %f117, %f109;
	ld.global.f32 	%f119, [V+8];
	mul.ftz.f32 	%f120, %f119, %f109;
	fma.rn.ftz.f32 	%f121, %f112, %f108, %f116;
	fma.rn.ftz.f32 	%f122, %f113, %f108, %f118;
	fma.rn.ftz.f32 	%f123, %f114, %f108, %f120;
	ld.global.f32 	%f124, [W];
	add.ftz.f32 	%f125, %f121, %f124;
	ld.global.f32 	%f126, [W+4];
	add.ftz.f32 	%f127, %f122, %f126;
	ld.global.f32 	%f128, [W+8];
	add.ftz.f32 	%f129, %f123, %f128;
	mul.ftz.f32 	%f130, %f127, %f127;
	fma.rn.ftz.f32 	%f131, %f125, %f125, %f130;
	fma.rn.ftz.f32 	%f132, %f129, %f129, %f131;
	sqrt.approx.ftz.f32 	%f133, %f132;
	rcp.approx.ftz.f32 	%f134, %f133;
	mul.ftz.f32 	%f135, %f125, %f134;
	mul.ftz.f32 	%f136, %f127, %f134;
	mul.ftz.f32 	%f137, %f129, %f134;
	ld.global.f32 	%f138, [normalmatrix];
	fma.rn.ftz.f32 	%f139, %f135, %f138, 0f00000000;
	ld.global.f32 	%f140, [normalmatrix+16];
	fma.rn.ftz.f32 	%f141, %f136, %f140, %f139;
	ld.global.f32 	%f142, [normalmatrix+32];
	fma.rn.ftz.f32 	%f143, %f137, %f142, %f141;
	ld.global.f32 	%f144, [normalmatrix+48];
	fma.rn.ftz.f32 	%f94, %f144, 0f3F800000, %f143;
	ld.global.f32 	%f145, [normalmatrix+4];
	fma.rn.ftz.f32 	%f146, %f135, %f145, 0f00000000;
	ld.global.f32 	%f147, [normalmatrix+20];
	fma.rn.ftz.f32 	%f148, %f136, %f147, %f146;
	ld.global.f32 	%f149, [normalmatrix+36];
	fma.rn.ftz.f32 	%f150, %f137, %f149, %f148;
	ld.global.f32 	%f151, [normalmatrix+52];
	fma.rn.ftz.f32 	%f95, %f151, 0f3F800000, %f150;
	ld.global.f32 	%f152, [normalmatrix+8];
	fma.rn.ftz.f32 	%f153, %f135, %f152, 0f00000000;
	ld.global.f32 	%f154, [normalmatrix+24];
	fma.rn.ftz.f32 	%f155, %f136, %f154, %f153;
	ld.global.f32 	%f156, [normalmatrix+40];
	fma.rn.ftz.f32 	%f157, %f137, %f156, %f155;
	ld.global.f32 	%f158, [normalmatrix+56];
	fma.rn.ftz.f32 	%f96, %f158, 0f3F800000, %f157;
	st.local.v4.f32 	[%rd1], {%f76, %f76, %f76, %f76};
	st.local.v2.f32 	[%rd1+16], {%f76, %f76};
	mov.u32 	%r91, 0;
	st.local.u32 	[%rd1+24], %r91;
	st.local.u32 	[%rd1+36], %r91;
	st.local.u32 	[%rd1+32], %r91;
	st.local.u32 	[%rd1+28], %r91;
	st.local.u32 	[%rd1+64], %r91;
	st.local.u32 	[%rd1+60], %r91;
	st.local.u32 	[%rd1+56], %r91;
	st.local.u32 	[%rd1+52], %r91;
	mov.u32 	%r92, 1065353216;
	st.local.u32 	[%rd1+116], %r92;
	st.local.u32 	[%rd1+112], %r92;
	st.local.u32 	[%rd1+108], %r92;
	st.local.u32 	[%rd1+92], %r91;
	st.local.u32 	[%rd1+88], %r91;
	st.local.u32 	[%rd1+84], %r91;
	mov.u32 	%r93, 1;
	st.local.u32 	[%rd1+128], %r93;
	st.local.u32 	[%rd1+132], %r91;
	st.local.u32 	[%rd1+120], %r89;
	st.local.u32 	[%rd1+124], %r91;
	st.local.u32 	[%rd1+68], %r91;
	ld.global.u32 	%r82, [top_object];
	ld.global.f32 	%f97, [scene_epsilon];
	ld.global.u32 	%r83, [pathtrace_ray_type];
	mov.f32 	%f98, 0f6C4ECB8F;
	mov.u32 	%r84, 144;
	// inline asm
	call _rt_trace_64, (%r82, %f110, %f111, %f93, %f94, %f95, %f96, %r83, %f97, %f98, %rd9, %r84);
	// inline asm
	ld.local.f32 	%f160, [%rd1];
	add.ftz.f32 	%f242, %f242, %f160;
	ld.local.f32 	%f161, [%rd1+4];
	add.ftz.f32 	%f243, %f243, %f161;
	ld.local.f32 	%f162, [%rd1+8];
	add.ftz.f32 	%f244, %f244, %f162;
	ld.local.f32 	%f163, [%rd1+12];
	add.ftz.f32 	%f245, %f245, %f163;
	ld.local.f32 	%f164, [%rd1+16];
	add.ftz.f32 	%f246, %f246, %f164;
	ld.local.f32 	%f165, [%rd1+20];
	add.ftz.f32 	%f247, %f247, %f165;
	ld.local.f32 	%f166, [%rd1+24];
	add.ftz.f32 	%f248, %f248, %f166;
	ld.local.f32 	%f167, [%rd1+28];
	add.ftz.f32 	%f249, %f249, %f167;
	ld.local.f32 	%f168, [%rd1+32];
	add.ftz.f32 	%f250, %f250, %f168;
	ld.local.f32 	%f169, [%rd1+36];
	add.ftz.f32 	%f251, %f251, %f169;
	ld.local.f32 	%f170, [%rd1+40];
	add.ftz.f32 	%f255, %f255, %f170;
	ld.local.f32 	%f171, [%rd1+44];
	add.ftz.f32 	%f256, %f256, %f171;
	ld.local.f32 	%f172, [%rd1+48];
	add.ftz.f32 	%f257, %f257, %f172;
	ld.local.f32 	%f173, [%rd1+64];
	add.ftz.f32 	%f36, %f22, %f173;
	ld.local.f32 	%f174, [%rd1+52];
	add.ftz.f32 	%f252, %f252, %f174;
	ld.local.f32 	%f175, [%rd1+56];
	add.ftz.f32 	%f253, %f253, %f175;
	ld.local.f32 	%f176, [%rd1+60];
	add.ftz.f32 	%f254, %f254, %f176;
	ld.local.f32 	%f177, [%rd1+68];
	add.ftz.f32 	%f258, %f258, %f177;
	ld.local.u32 	%r139, [%rd1+120];
	ld.global.u32 	%r137, [sqrt_num_samples];
	add.s32 	%r138, %r138, -1;
	setp.ne.s32	%p1, %r138, 0;
	mov.f32 	%f259, %f36;
	@%p1 bra 	BB8_1;

	mul.lo.s32 	%r94, %r137, %r137;
	cvt.rn.f32.u32	%f178, %r94;
	rcp.approx.ftz.f32 	%f179, %f178;
	mul.ftz.f32 	%f41, %f242, %f179;
	mul.ftz.f32 	%f42, %f243, %f179;
	mul.ftz.f32 	%f43, %f244, %f179;
	mul.ftz.f32 	%f44, %f245, %f179;
	mul.ftz.f32 	%f45, %f246, %f179;
	mul.ftz.f32 	%f46, %f247, %f179;
	mul.ftz.f32 	%f47, %f248, %f179;
	mul.ftz.f32 	%f48, %f249, %f179;
	mul.ftz.f32 	%f49, %f250, %f179;
	mul.ftz.f32 	%f50, %f251, %f179;
	mul.ftz.f32 	%f51, %f255, %f179;
	mul.ftz.f32 	%f52, %f256, %f179;
	mul.ftz.f32 	%f53, %f257, %f179;
	mul.ftz.f32 	%f54, %f252, %f179;
	mul.ftz.f32 	%f55, %f253, %f179;
	mul.ftz.f32 	%f56, %f254, %f179;
	div.approx.ftz.f32 	%f57, %f36, %f178;
	div.approx.ftz.f32 	%f58, %f258, %f178;
	ld.global.u32 	%r10, [frame_number];
	setp.gt.u32	%p2, %r10, 1;
	@%p2 bra 	BB8_4;

	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r11, %r12, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.v4.f32 	[%rd13], {%f41, %f42, %f43, %f44};
	cvta.global.u64 	%rd20, output_buffer_nrm;
	mov.u32 	%r104, 12;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r11, %r104, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd19+8], %f47;
	st.f32 	[%rd19+4], %f46;
	st.f32 	[%rd19], %f45;
	cvta.global.u64 	%rd26, output_buffer_world;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r11, %r104, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd25+8], %f50;
	st.f32 	[%rd25+4], %f49;
	st.f32 	[%rd25], %f48;
	cvta.global.u64 	%rd32, output_buffer_diffuse;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r11, %r104, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd31+8], %f53;
	st.f32 	[%rd31+4], %f52;
	st.f32 	[%rd31], %f51;
	cvta.global.u64 	%rd38, output_buffer_trap;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r11, %r104, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd37+8], %f56;
	st.f32 	[%rd37+4], %f55;
	st.f32 	[%rd37], %f54;
	cvta.global.u64 	%rd44, output_buffer_depth;
	mov.u32 	%r108, 4;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r11, %r108, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd43], %f57;
	cvta.global.u64 	%rd50, output_buffer_iteration;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r11, %r108, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd49], %f58;
	bra.uni 	BB8_5;

BB8_4:
	cvt.rn.f32.u32	%f180, %r10;
	rcp.approx.ftz.f32 	%f181, %f180;
	add.ftz.f32 	%f182, %f180, 0fBF800000;
	mul.ftz.f32 	%f183, %f182, %f181;
	mov.u64 	%rd138, 0;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd8, %r11, %r12, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd8, %r11, %r12, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.v4.f32 	{%f184, %f185, %f186, %f187}, [%rd61];
	mul.ftz.f32 	%f189, %f184, %f183;
	mul.ftz.f32 	%f191, %f185, %f183;
	mul.ftz.f32 	%f193, %f186, %f183;
	mul.ftz.f32 	%f195, %f187, %f183;
	fma.rn.ftz.f32 	%f196, %f44, %f181, %f195;
	fma.rn.ftz.f32 	%f197, %f43, %f181, %f193;
	fma.rn.ftz.f32 	%f198, %f42, %f181, %f191;
	fma.rn.ftz.f32 	%f199, %f41, %f181, %f189;
	st.v4.f32 	[%rd55], {%f199, %f198, %f197, %f196};
	cvta.global.u64 	%rd74, output_buffer_nrm;
	mov.u32 	%r128, 12;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd74, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f200, [%rd73];
	mul.ftz.f32 	%f201, %f200, %f183;
	ld.f32 	%f202, [%rd73+4];
	mul.ftz.f32 	%f203, %f202, %f183;
	ld.f32 	%f204, [%rd73+8];
	mul.ftz.f32 	%f205, %f204, %f183;
	fma.rn.ftz.f32 	%f206, %f45, %f181, %f201;
	fma.rn.ftz.f32 	%f207, %f46, %f181, %f203;
	fma.rn.ftz.f32 	%f208, %f47, %f181, %f205;
	st.f32 	[%rd67+8], %f208;
	st.f32 	[%rd67+4], %f207;
	st.f32 	[%rd67], %f206;
	cvta.global.u64 	%rd86, output_buffer_world;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd86, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f209, [%rd85];
	mul.ftz.f32 	%f210, %f209, %f183;
	ld.f32 	%f211, [%rd85+4];
	mul.ftz.f32 	%f212, %f211, %f183;
	ld.f32 	%f213, [%rd85+8];
	mul.ftz.f32 	%f214, %f213, %f183;
	fma.rn.ftz.f32 	%f215, %f48, %f181, %f210;
	fma.rn.ftz.f32 	%f216, %f49, %f181, %f212;
	fma.rn.ftz.f32 	%f217, %f50, %f181, %f214;
	st.f32 	[%rd79+8], %f217;
	st.f32 	[%rd79+4], %f216;
	st.f32 	[%rd79], %f215;
	cvta.global.u64 	%rd98, output_buffer_diffuse;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd98, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f218, [%rd97];
	mul.ftz.f32 	%f219, %f218, %f183;
	ld.f32 	%f220, [%rd97+4];
	mul.ftz.f32 	%f221, %f220, %f183;
	ld.f32 	%f222, [%rd97+8];
	mul.ftz.f32 	%f223, %f222, %f183;
	fma.rn.ftz.f32 	%f224, %f51, %f181, %f219;
	fma.rn.ftz.f32 	%f225, %f52, %f181, %f221;
	fma.rn.ftz.f32 	%f226, %f53, %f181, %f223;
	st.f32 	[%rd91+8], %f226;
	st.f32 	[%rd91+4], %f225;
	st.f32 	[%rd91], %f224;
	cvta.global.u64 	%rd110, output_buffer_trap;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd110, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r11, %r128, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f227, [%rd109];
	mul.ftz.f32 	%f228, %f227, %f183;
	ld.f32 	%f229, [%rd109+4];
	mul.ftz.f32 	%f230, %f229, %f183;
	ld.f32 	%f231, [%rd109+8];
	mul.ftz.f32 	%f232, %f231, %f183;
	fma.rn.ftz.f32 	%f233, %f54, %f181, %f228;
	fma.rn.ftz.f32 	%f234, %f55, %f181, %f230;
	fma.rn.ftz.f32 	%f235, %f56, %f181, %f232;
	st.f32 	[%rd103+8], %f235;
	st.f32 	[%rd103+4], %f234;
	st.f32 	[%rd103], %f233;
	cvta.global.u64 	%rd122, output_buffer_depth;
	mov.u32 	%r136, 4;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd122, %r11, %r136, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f236, [%rd115];
	mul.ftz.f32 	%f237, %f183, %f236;
	fma.rn.ftz.f32 	%f238, %f181, %f57, %f237;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r11, %r136, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	st.f32 	[%rd121], %f238;
	cvta.global.u64 	%rd134, output_buffer_iteration;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd134, %r11, %r136, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f239, [%rd127];
	mul.ftz.f32 	%f240, %f183, %f239;
	fma.rn.ftz.f32 	%f241, %f181, %f58, %f240;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r11, %r136, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	st.f32 	[%rd133], %f241;

BB8_5:
	ret;
}

.visible .entry _Z10env_camerav(

)
{
	.local .align 16 .b8 	__local_depot9[144];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<133>;
	.reg .f32 	%f<248>;
	.reg .s64 	%rd<139>;


	mov.u64 	%SPL, __local_depot9;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd9;
	cvta.global.u64 	%rd8, output_buffer;
	mov.u32 	%r8, 2;
	mov.u32 	%r9, 16;
	// inline asm
	call (%rd4, %rd5, %rd6, %rd7), _rt_buffer_get_size_64, (%rd8, %r8, %r9);
	// inline asm
	ld.global.v2.f32 	{%f76, %f77}, [TileSize];
	cvt.rzi.ftz.u32.f32	%r10, %f76;
	cvt.rzi.ftz.u32.f32	%r11, %f77;
	ld.global.v2.u32 	{%r12, %r13}, [NoOfTiles];
	ld.global.v2.u32 	{%r14, %r15}, [launch_index];
	mad.lo.s32 	%r18, %r12, %r10, %r14;
	mad.lo.s32 	%r21, %r13, %r11, %r15;
	cvt.rn.f32.u64	%f80, %rd4;
	cvt.rn.f32.u64	%f81, %rd5;
	ld.global.u32 	%r22, [sqrt_num_samples];
	mul.lo.s32 	%r131, %r22, %r22;
	cvt.u64.u32	%rd2, %r21;
	mul.lo.s64 	%rd10, %rd2, %rd4;
	cvt.u64.u32	%rd3, %r18;
	add.s64 	%rd11, %rd10, %rd3;
	cvt.u32.u64	%r23, %rd11;
	ld.global.u32 	%r24, [frame_number];
	shl.b32 	%r25, %r24, 4;
	add.s32 	%r26, %r25, -1556008596;
	shr.u32 	%r27, %r24, 5;
	add.s32 	%r28, %r27, -939442524;
	add.s32 	%r29, %r24, -1640531527;
	xor.b32  	%r30, %r26, %r29;
	xor.b32  	%r31, %r30, %r28;
	add.s32 	%r32, %r31, %r23;
	shl.b32 	%r33, %r32, 4;
	add.s32 	%r34, %r33, -1383041155;
	shr.u32 	%r35, %r32, 5;
	add.s32 	%r36, %r35, 2123724318;
	add.s32 	%r37, %r32, -1640531527;
	xor.b32  	%r38, %r34, %r37;
	xor.b32  	%r39, %r38, %r36;
	add.s32 	%r40, %r39, %r24;
	shl.b32 	%r41, %r40, 4;
	add.s32 	%r42, %r41, -1556008596;
	shr.u32 	%r43, %r40, 5;
	add.s32 	%r44, %r43, -939442524;
	add.s32 	%r45, %r40, 1013904242;
	xor.b32  	%r46, %r42, %r45;
	xor.b32  	%r47, %r46, %r44;
	add.s32 	%r48, %r47, %r32;
	shl.b32 	%r49, %r48, 4;
	add.s32 	%r50, %r49, -1383041155;
	shr.u32 	%r51, %r48, 5;
	add.s32 	%r52, %r51, 2123724318;
	add.s32 	%r53, %r48, 1013904242;
	xor.b32  	%r54, %r50, %r53;
	xor.b32  	%r55, %r54, %r52;
	add.s32 	%r56, %r55, %r40;
	shl.b32 	%r57, %r56, 4;
	add.s32 	%r58, %r57, -1556008596;
	shr.u32 	%r59, %r56, 5;
	add.s32 	%r60, %r59, -939442524;
	add.s32 	%r61, %r56, -626627285;
	xor.b32  	%r62, %r58, %r61;
	xor.b32  	%r63, %r62, %r60;
	add.s32 	%r64, %r63, %r48;
	shl.b32 	%r65, %r64, 4;
	add.s32 	%r66, %r65, -1383041155;
	shr.u32 	%r67, %r64, 5;
	add.s32 	%r68, %r67, 2123724318;
	add.s32 	%r69, %r64, -626627285;
	xor.b32  	%r70, %r66, %r69;
	xor.b32  	%r71, %r70, %r68;
	add.s32 	%r72, %r71, %r56;
	shl.b32 	%r73, %r72, 4;
	add.s32 	%r74, %r73, -1556008596;
	shr.u32 	%r75, %r72, 5;
	add.s32 	%r76, %r75, -939442524;
	add.s32 	%r77, %r72, 2027808484;
	xor.b32  	%r78, %r74, %r77;
	xor.b32  	%r79, %r78, %r76;
	add.s32 	%r132, %r79, %r64;
	cvt.rn.f32.u32	%f82, %r18;
	cvt.rn.f32.u32	%f83, %r21;
	div.approx.ftz.f32 	%f84, %f82, %f80;
	div.approx.ftz.f32 	%f85, %f83, %f81;
	fma.rn.ftz.f32 	%f86, %f84, 0f40C90FDB, 0f40490FDB;
	fma.rn.ftz.f32 	%f87, %f85, 0f40490FDB, 0f00000000;
	mov.f32 	%f75, 0f00000000;
	cos.approx.ftz.f32 	%f88, %f86;
	sin.approx.ftz.f32 	%f89, %f87;
	mul.ftz.f32 	%f1, %f88, %f89;
	cos.approx.ftz.f32 	%f90, %f87;
	neg.ftz.f32 	%f2, %f90;
	sin.approx.ftz.f32 	%f91, %f86;
	mul.ftz.f32 	%f3, %f91, %f89;
	mov.f32 	%f246, %f75;
	mov.f32 	%f245, %f75;
	mov.f32 	%f244, %f75;
	mov.f32 	%f243, %f75;
	mov.f32 	%f242, %f75;
	mov.f32 	%f241, %f75;
	mov.f32 	%f240, %f75;
	mov.f32 	%f239, %f75;
	mov.f32 	%f238, %f75;
	mov.f32 	%f237, %f75;
	mov.f32 	%f236, %f75;
	mov.f32 	%f235, %f75;
	mov.f32 	%f234, %f75;
	mov.f32 	%f233, %f75;
	mov.f32 	%f232, %f75;
	mov.f32 	%f231, %f75;
	mov.f32 	%f230, %f75;
	mov.f32 	%f247, %f75;

BB9_1:
	mov.f32 	%f21, %f247;
	mad.lo.s32 	%r83, %r132, 389569705, 1196435762;
	st.local.v4.f32 	[%rd1], {%f75, %f75, %f75, %f75};
	st.local.v2.f32 	[%rd1+16], {%f75, %f75};
	mov.u32 	%r84, 0;
	st.local.u32 	[%rd1+24], %r84;
	st.local.u32 	[%rd1+36], %r84;
	st.local.u32 	[%rd1+32], %r84;
	st.local.u32 	[%rd1+28], %r84;
	st.local.u32 	[%rd1+64], %r84;
	st.local.u32 	[%rd1+60], %r84;
	st.local.u32 	[%rd1+56], %r84;
	st.local.u32 	[%rd1+52], %r84;
	mov.u32 	%r85, 1065353216;
	st.local.u32 	[%rd1+116], %r85;
	st.local.u32 	[%rd1+112], %r85;
	st.local.u32 	[%rd1+108], %r85;
	st.local.u32 	[%rd1+92], %r84;
	st.local.u32 	[%rd1+88], %r84;
	st.local.u32 	[%rd1+84], %r84;
	mov.u32 	%r86, 1;
	st.local.u32 	[%rd1+128], %r86;
	st.local.u32 	[%rd1+132], %r84;
	st.local.u32 	[%rd1+120], %r83;
	st.local.u32 	[%rd1+124], %r84;
	st.local.u32 	[%rd1+68], %r84;
	ld.global.f32 	%f101, [U];
	ld.global.f32 	%f102, [U+4];
	mul.ftz.f32 	%f103, %f102, %f102;
	fma.rn.ftz.f32 	%f104, %f101, %f101, %f103;
	ld.global.f32 	%f105, [U+8];
	fma.rn.ftz.f32 	%f106, %f105, %f105, %f104;
	sqrt.approx.ftz.f32 	%f107, %f106;
	rcp.approx.ftz.f32 	%f108, %f107;
	mul.ftz.f32 	%f109, %f101, %f108;
	mul.ftz.f32 	%f110, %f102, %f108;
	mul.ftz.f32 	%f111, %f105, %f108;
	ld.global.f32 	%f112, [V];
	ld.global.f32 	%f113, [V+4];
	mul.ftz.f32 	%f114, %f113, %f113;
	fma.rn.ftz.f32 	%f115, %f112, %f112, %f114;
	ld.global.f32 	%f116, [V+8];
	fma.rn.ftz.f32 	%f117, %f116, %f116, %f115;
	sqrt.approx.ftz.f32 	%f118, %f117;
	rcp.approx.ftz.f32 	%f119, %f118;
	mul.ftz.f32 	%f120, %f112, %f119;
	mul.ftz.f32 	%f121, %f113, %f119;
	mul.ftz.f32 	%f122, %f116, %f119;
	mul.ftz.f32 	%f123, %f120, %f2;
	mul.ftz.f32 	%f124, %f121, %f2;
	mul.ftz.f32 	%f125, %f122, %f2;
	fma.rn.ftz.f32 	%f126, %f109, %f1, %f123;
	fma.rn.ftz.f32 	%f127, %f110, %f1, %f124;
	fma.rn.ftz.f32 	%f128, %f111, %f1, %f125;
	ld.global.f32 	%f129, [W];
	ld.global.f32 	%f130, [W+4];
	mul.ftz.f32 	%f131, %f130, %f130;
	fma.rn.ftz.f32 	%f132, %f129, %f129, %f131;
	ld.global.f32 	%f133, [W+8];
	fma.rn.ftz.f32 	%f134, %f133, %f133, %f132;
	sqrt.approx.ftz.f32 	%f135, %f134;
	rcp.approx.ftz.f32 	%f136, %f135;
	mul.ftz.f32 	%f137, %f129, %f136;
	mul.ftz.f32 	%f138, %f130, %f136;
	mul.ftz.f32 	%f139, %f133, %f136;
	fma.rn.ftz.f32 	%f140, %f137, %f3, %f126;
	fma.rn.ftz.f32 	%f141, %f138, %f3, %f127;
	fma.rn.ftz.f32 	%f142, %f139, %f3, %f128;
	mul.ftz.f32 	%f143, %f141, %f141;
	fma.rn.ftz.f32 	%f144, %f140, %f140, %f143;
	fma.rn.ftz.f32 	%f145, %f142, %f142, %f144;
	sqrt.approx.ftz.f32 	%f146, %f145;
	rcp.approx.ftz.f32 	%f147, %f146;
	mul.ftz.f32 	%f95, %f140, %f147;
	mul.ftz.f32 	%f96, %f141, %f147;
	mul.ftz.f32 	%f97, %f142, %f147;
	ld.global.u32 	%r80, [top_object];
	ld.global.f32 	%f94, [eye+8];
	ld.global.f32 	%f93, [eye+4];
	ld.global.f32 	%f92, [eye];
	ld.global.f32 	%f98, [scene_epsilon];
	ld.global.u32 	%r81, [pathtrace_ray_type];
	mov.f32 	%f99, 0f6C4ECB8F;
	mov.u32 	%r82, 144;
	// inline asm
	call _rt_trace_64, (%r80, %f92, %f93, %f94, %f95, %f96, %f97, %r81, %f98, %f99, %rd9, %r82);
	// inline asm
	ld.local.f32 	%f148, [%rd1];
	add.ftz.f32 	%f230, %f230, %f148;
	ld.local.f32 	%f149, [%rd1+4];
	add.ftz.f32 	%f231, %f231, %f149;
	ld.local.f32 	%f150, [%rd1+8];
	add.ftz.f32 	%f232, %f232, %f150;
	ld.local.f32 	%f151, [%rd1+12];
	add.ftz.f32 	%f233, %f233, %f151;
	ld.local.f32 	%f152, [%rd1+16];
	add.ftz.f32 	%f234, %f234, %f152;
	ld.local.f32 	%f153, [%rd1+20];
	add.ftz.f32 	%f235, %f235, %f153;
	ld.local.f32 	%f154, [%rd1+24];
	add.ftz.f32 	%f236, %f236, %f154;
	ld.local.f32 	%f155, [%rd1+28];
	add.ftz.f32 	%f237, %f237, %f155;
	ld.local.f32 	%f156, [%rd1+32];
	add.ftz.f32 	%f238, %f238, %f156;
	ld.local.f32 	%f157, [%rd1+36];
	add.ftz.f32 	%f239, %f239, %f157;
	ld.local.f32 	%f158, [%rd1+40];
	add.ftz.f32 	%f243, %f243, %f158;
	ld.local.f32 	%f159, [%rd1+44];
	add.ftz.f32 	%f244, %f244, %f159;
	ld.local.f32 	%f160, [%rd1+48];
	add.ftz.f32 	%f245, %f245, %f160;
	ld.local.f32 	%f161, [%rd1+64];
	add.ftz.f32 	%f35, %f21, %f161;
	ld.local.f32 	%f162, [%rd1+52];
	add.ftz.f32 	%f240, %f240, %f162;
	ld.local.f32 	%f163, [%rd1+56];
	add.ftz.f32 	%f241, %f241, %f163;
	ld.local.f32 	%f164, [%rd1+60];
	add.ftz.f32 	%f242, %f242, %f164;
	ld.local.f32 	%f165, [%rd1+68];
	add.ftz.f32 	%f246, %f246, %f165;
	ld.local.u32 	%r132, [%rd1+120];
	add.s32 	%r131, %r131, -1;
	setp.ne.s32	%p1, %r131, 0;
	mov.f32 	%f247, %f35;
	@%p1 bra 	BB9_1;

	ld.global.u32 	%r87, [sqrt_num_samples];
	mul.lo.s32 	%r88, %r87, %r87;
	cvt.rn.f32.u32	%f166, %r88;
	rcp.approx.ftz.f32 	%f167, %f166;
	mul.ftz.f32 	%f40, %f230, %f167;
	mul.ftz.f32 	%f41, %f231, %f167;
	mul.ftz.f32 	%f42, %f232, %f167;
	mul.ftz.f32 	%f43, %f233, %f167;
	mul.ftz.f32 	%f44, %f234, %f167;
	mul.ftz.f32 	%f45, %f235, %f167;
	mul.ftz.f32 	%f46, %f236, %f167;
	mul.ftz.f32 	%f47, %f237, %f167;
	mul.ftz.f32 	%f48, %f238, %f167;
	mul.ftz.f32 	%f49, %f239, %f167;
	mul.ftz.f32 	%f50, %f243, %f167;
	mul.ftz.f32 	%f51, %f244, %f167;
	mul.ftz.f32 	%f52, %f245, %f167;
	mul.ftz.f32 	%f53, %f240, %f167;
	mul.ftz.f32 	%f54, %f241, %f167;
	mul.ftz.f32 	%f55, %f242, %f167;
	div.approx.ftz.f32 	%f56, %f35, %f166;
	div.approx.ftz.f32 	%f57, %f246, %f166;
	ld.global.u32 	%r7, [frame_number];
	setp.gt.u32	%p2, %r7, 1;
	@%p2 bra 	BB9_4;

	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r8, %r9, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.v4.f32 	[%rd13], {%f40, %f41, %f42, %f43};
	cvta.global.u64 	%rd20, output_buffer_nrm;
	mov.u32 	%r98, 12;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r8, %r98, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd19+8], %f46;
	st.f32 	[%rd19+4], %f45;
	st.f32 	[%rd19], %f44;
	cvta.global.u64 	%rd26, output_buffer_world;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r8, %r98, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd25+8], %f49;
	st.f32 	[%rd25+4], %f48;
	st.f32 	[%rd25], %f47;
	cvta.global.u64 	%rd32, output_buffer_diffuse;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r8, %r98, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd31+8], %f52;
	st.f32 	[%rd31+4], %f51;
	st.f32 	[%rd31], %f50;
	cvta.global.u64 	%rd38, output_buffer_trap;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r8, %r98, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd37+8], %f55;
	st.f32 	[%rd37+4], %f54;
	st.f32 	[%rd37], %f53;
	cvta.global.u64 	%rd44, output_buffer_depth;
	mov.u32 	%r102, 4;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r8, %r102, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd43], %f56;
	cvta.global.u64 	%rd50, output_buffer_iteration;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r8, %r102, %rd3, %rd2, %rd54, %rd54);
	// inline asm
	st.f32 	[%rd49], %f57;
	bra.uni 	BB9_5;

BB9_4:
	cvt.rn.f32.u32	%f168, %r7;
	rcp.approx.ftz.f32 	%f169, %f168;
	add.ftz.f32 	%f170, %f168, 0fBF800000;
	mul.ftz.f32 	%f171, %f170, %f169;
	mov.u64 	%rd138, 0;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd8, %r8, %r9, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd8, %r8, %r9, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.v4.f32 	{%f172, %f173, %f174, %f175}, [%rd61];
	mul.ftz.f32 	%f177, %f172, %f171;
	mul.ftz.f32 	%f179, %f173, %f171;
	mul.ftz.f32 	%f181, %f174, %f171;
	mul.ftz.f32 	%f183, %f175, %f171;
	fma.rn.ftz.f32 	%f184, %f43, %f169, %f183;
	fma.rn.ftz.f32 	%f185, %f42, %f169, %f181;
	fma.rn.ftz.f32 	%f186, %f41, %f169, %f179;
	fma.rn.ftz.f32 	%f187, %f40, %f169, %f177;
	st.v4.f32 	[%rd55], {%f187, %f186, %f185, %f184};
	cvta.global.u64 	%rd74, output_buffer_nrm;
	mov.u32 	%r122, 12;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd74, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f188, [%rd73];
	mul.ftz.f32 	%f189, %f188, %f171;
	ld.f32 	%f190, [%rd73+4];
	mul.ftz.f32 	%f191, %f190, %f171;
	ld.f32 	%f192, [%rd73+8];
	mul.ftz.f32 	%f193, %f192, %f171;
	fma.rn.ftz.f32 	%f194, %f44, %f169, %f189;
	fma.rn.ftz.f32 	%f195, %f45, %f169, %f191;
	fma.rn.ftz.f32 	%f196, %f46, %f169, %f193;
	st.f32 	[%rd67+8], %f196;
	st.f32 	[%rd67+4], %f195;
	st.f32 	[%rd67], %f194;
	cvta.global.u64 	%rd86, output_buffer_world;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd86, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f197, [%rd85];
	mul.ftz.f32 	%f198, %f197, %f171;
	ld.f32 	%f199, [%rd85+4];
	mul.ftz.f32 	%f200, %f199, %f171;
	ld.f32 	%f201, [%rd85+8];
	mul.ftz.f32 	%f202, %f201, %f171;
	fma.rn.ftz.f32 	%f203, %f47, %f169, %f198;
	fma.rn.ftz.f32 	%f204, %f48, %f169, %f200;
	fma.rn.ftz.f32 	%f205, %f49, %f169, %f202;
	st.f32 	[%rd79+8], %f205;
	st.f32 	[%rd79+4], %f204;
	st.f32 	[%rd79], %f203;
	cvta.global.u64 	%rd98, output_buffer_diffuse;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd98, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f206, [%rd97];
	mul.ftz.f32 	%f207, %f206, %f171;
	ld.f32 	%f208, [%rd97+4];
	mul.ftz.f32 	%f209, %f208, %f171;
	ld.f32 	%f210, [%rd97+8];
	mul.ftz.f32 	%f211, %f210, %f171;
	fma.rn.ftz.f32 	%f212, %f50, %f169, %f207;
	fma.rn.ftz.f32 	%f213, %f51, %f169, %f209;
	fma.rn.ftz.f32 	%f214, %f52, %f169, %f211;
	st.f32 	[%rd91+8], %f214;
	st.f32 	[%rd91+4], %f213;
	st.f32 	[%rd91], %f212;
	cvta.global.u64 	%rd110, output_buffer_trap;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd110, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r8, %r122, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f215, [%rd109];
	mul.ftz.f32 	%f216, %f215, %f171;
	ld.f32 	%f217, [%rd109+4];
	mul.ftz.f32 	%f218, %f217, %f171;
	ld.f32 	%f219, [%rd109+8];
	mul.ftz.f32 	%f220, %f219, %f171;
	fma.rn.ftz.f32 	%f221, %f53, %f169, %f216;
	fma.rn.ftz.f32 	%f222, %f54, %f169, %f218;
	fma.rn.ftz.f32 	%f223, %f55, %f169, %f220;
	st.f32 	[%rd103+8], %f223;
	st.f32 	[%rd103+4], %f222;
	st.f32 	[%rd103], %f221;
	cvta.global.u64 	%rd122, output_buffer_depth;
	mov.u32 	%r130, 4;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd122, %r8, %r130, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f224, [%rd115];
	mul.ftz.f32 	%f225, %f171, %f224;
	fma.rn.ftz.f32 	%f226, %f169, %f56, %f225;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r8, %r130, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	st.f32 	[%rd121], %f226;
	cvta.global.u64 	%rd134, output_buffer_iteration;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd134, %r8, %r130, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	ld.f32 	%f227, [%rd127];
	mul.ftz.f32 	%f228, %f171, %f227;
	fma.rn.ftz.f32 	%f229, %f169, %f57, %f228;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r8, %r130, %rd3, %rd2, %rd138, %rd138);
	// inline asm
	st.f32 	[%rd133], %f229;

BB9_5:
	ret;
}

.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<27>;
	.reg .s32 	%r<34>;
	.reg .f32 	%f<202>;
	.reg .s64 	%rd<12>;


	mov.u32 	%r33, 0;
	st.global.u32 	[normal+8], %r33;
	mov.f32 	%f194, 0f00000000;
	st.global.v2.f32 	[normal], {%f194, %f194};
	ld.global.f32 	%f3, [ray+8];
	ld.global.v2.f32 	{%f101, %f102}, [ray];
	add.ftz.f32 	%f103, %f101, 0f80000000;
	add.ftz.f32 	%f104, %f102, 0f80000000;
	add.ftz.f32 	%f105, %f3, 0f80000000;
	mul.ftz.f32 	%f106, %f104, %f104;
	fma.rn.ftz.f32 	%f107, %f103, %f103, %f106;
	fma.rn.ftz.f32 	%f108, %f105, %f105, %f107;
	sqrt.approx.ftz.f32 	%f109, %f108;
	setp.gtu.ftz.f32	%p2, %f109, 0f41200000;
	@%p2 bra 	BB10_2;

	mov.pred 	%p26, 0;
	mov.f32 	%f193, 0f6C4ECB8F;
	bra.uni 	BB10_5;

BB10_2:
	ld.global.f32 	%f112, [ray+20];
	ld.global.f32 	%f113, [ray+12];
	ld.global.f32 	%f114, [ray+16];
	mul.ftz.f32 	%f115, %f102, %f114;
	fma.rn.ftz.f32 	%f116, %f101, %f113, %f115;
	fma.rn.ftz.f32 	%f4, %f3, %f112, %f116;
	mul.ftz.f32 	%f117, %f102, %f102;
	fma.rn.ftz.f32 	%f118, %f101, %f101, %f117;
	fma.rn.ftz.f32 	%f119, %f3, %f3, %f118;
	add.ftz.f32 	%f120, %f119, 0fC2C80000;
	mul.ftz.f32 	%f121, %f4, %f4;
	sub.ftz.f32 	%f5, %f121, %f120;
	setp.gt.ftz.f32	%p4, %f5, 0f00000000;
	@%p4 bra 	BB10_4;

	mov.pred 	%p26, -1;
	mov.f32 	%f123, 0f00000000;
	mov.f32 	%f193, %f123;
	bra.uni 	BB10_5;

BB10_4:
	sqrt.approx.ftz.f32 	%f124, %f5;
	neg.ftz.f32 	%f125, %f4;
	sub.ftz.f32 	%f194, %f125, %f124;
	sub.ftz.f32 	%f126, %f124, %f4;
	setp.gt.ftz.f32	%p7, %f194, %f126;
	selp.f32	%f193, %f194, %f126, %p7;
	mov.pred 	%p26, 0;

BB10_5:
	@%p26 bra 	BB10_17;

	ld.global.f32 	%f12, [ray+20];
	ld.global.f32 	%f11, [ray+16];
	ld.global.f32 	%f10, [ray+12];
	fma.rn.ftz.f32 	%f197, %f10, %f194, %f101;
	fma.rn.ftz.f32 	%f196, %f11, %f194, %f102;
	fma.rn.ftz.f32 	%f195, %f12, %f194, %f3;
	mov.f32 	%f201, 0f501502F9;
	mov.f32 	%f200, %f201;
	mov.f32 	%f199, %f201;
	// inline asm
	prototype_0 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	// inline asm
	prototype_1 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	// inline asm
	prototype_2 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	// inline asm
	prototype_3 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	// inline asm
	prototype_4 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm

BB10_7:
	mov.u32 	%r31, %r33;
	mov.u32 	%r1, %r31;
	ld.global.u32 	%r11, [max_iterations];
	ld.global.f32 	%f130, [global_t];
	ld.global.u32 	%r10, [hit_hook];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f197;
	st.param.f32	[param0+4], %f196;
	st.param.f32	[param0+8], %f195;
	.param .b32 param1;
	st.param.b32	[param1+0], %r11;
	.param .b32 param2;
	st.param.f32	[param2+0], %f130;
	.param .align 16 .b8 retval0[16];
	call (retval0), 
	%rd1, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_0;
	ld.param.f32	%f198, [retval0+0];
	ld.param.f32	%f24, [retval0+4];
	ld.param.f32	%f25, [retval0+8];
	ld.param.f32	%f26, [retval0+12];
	}
	// Callseq End 0
	fma.rn.ftz.f32 	%f197, %f10, %f198, %f197;
	fma.rn.ftz.f32 	%f196, %f11, %f198, %f196;
	fma.rn.ftz.f32 	%f195, %f12, %f198, %f195;
	fma.rn.ftz.f32 	%f194, %f198, 0f3F7D70A4, %f194;
	setp.lt.ftz.f32	%p8, %f198, 0f3A83126F;
	setp.gt.ftz.f32	%p9, %f194, %f193;
	or.pred  	%p10, %p8, %p9;
	mov.u32 	%r32, %r1;
	@%p10 bra 	BB10_13;

	min.ftz.f32 	%f201, %f201, %f24;
	min.ftz.f32 	%f200, %f200, %f25;
	min.ftz.f32 	%f199, %f199, %f26;
	add.s32 	%r2, %r1, 1;
	ld.global.u32 	%r13, [max_iterations];
	ld.global.f32 	%f131, [global_t];
	ld.global.u32 	%r12, [hit_hook];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r12);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f197;
	st.param.f32	[param0+4], %f196;
	st.param.f32	[param0+8], %f195;
	.param .b32 param1;
	st.param.b32	[param1+0], %r13;
	.param .b32 param2;
	st.param.f32	[param2+0], %f131;
	.param .align 16 .b8 retval0[16];
	call (retval0), 
	%rd2, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_1;
	ld.param.f32	%f198, [retval0+0];
	ld.param.f32	%f36, [retval0+4];
	ld.param.f32	%f37, [retval0+8];
	ld.param.f32	%f38, [retval0+12];
	}
	// Callseq End 1
	fma.rn.ftz.f32 	%f197, %f10, %f198, %f197;
	fma.rn.ftz.f32 	%f196, %f11, %f198, %f196;
	fma.rn.ftz.f32 	%f195, %f12, %f198, %f195;
	fma.rn.ftz.f32 	%f194, %f198, 0f3F7D70A4, %f194;
	setp.lt.ftz.f32	%p11, %f198, 0f3A83126F;
	setp.gt.ftz.f32	%p12, %f194, %f193;
	or.pred  	%p13, %p11, %p12;
	mov.u32 	%r32, %r2;
	@%p13 bra 	BB10_13;

	min.ftz.f32 	%f201, %f201, %f36;
	min.ftz.f32 	%f200, %f200, %f37;
	min.ftz.f32 	%f199, %f199, %f38;
	add.s32 	%r3, %r1, 2;
	ld.global.u32 	%r15, [max_iterations];
	ld.global.f32 	%f132, [global_t];
	ld.global.u32 	%r14, [hit_hook];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r14);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f197;
	st.param.f32	[param0+4], %f196;
	st.param.f32	[param0+8], %f195;
	.param .b32 param1;
	st.param.b32	[param1+0], %r15;
	.param .b32 param2;
	st.param.f32	[param2+0], %f132;
	.param .align 16 .b8 retval0[16];
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_2;
	ld.param.f32	%f198, [retval0+0];
	ld.param.f32	%f48, [retval0+4];
	ld.param.f32	%f49, [retval0+8];
	ld.param.f32	%f50, [retval0+12];
	}
	// Callseq End 2
	fma.rn.ftz.f32 	%f197, %f10, %f198, %f197;
	fma.rn.ftz.f32 	%f196, %f11, %f198, %f196;
	fma.rn.ftz.f32 	%f195, %f12, %f198, %f195;
	fma.rn.ftz.f32 	%f194, %f198, 0f3F7D70A4, %f194;
	setp.lt.ftz.f32	%p14, %f198, 0f3A83126F;
	setp.gt.ftz.f32	%p15, %f194, %f193;
	or.pred  	%p16, %p14, %p15;
	mov.u32 	%r32, %r3;
	@%p16 bra 	BB10_13;

	min.ftz.f32 	%f201, %f201, %f48;
	min.ftz.f32 	%f200, %f200, %f49;
	min.ftz.f32 	%f199, %f199, %f50;
	add.s32 	%r4, %r1, 3;
	ld.global.u32 	%r17, [max_iterations];
	ld.global.f32 	%f133, [global_t];
	ld.global.u32 	%r16, [hit_hook];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r16);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f197;
	st.param.f32	[param0+4], %f196;
	st.param.f32	[param0+8], %f195;
	.param .b32 param1;
	st.param.b32	[param1+0], %r17;
	.param .b32 param2;
	st.param.f32	[param2+0], %f133;
	.param .align 16 .b8 retval0[16];
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_3;
	ld.param.f32	%f198, [retval0+0];
	ld.param.f32	%f60, [retval0+4];
	ld.param.f32	%f61, [retval0+8];
	ld.param.f32	%f62, [retval0+12];
	}
	// Callseq End 3
	fma.rn.ftz.f32 	%f197, %f10, %f198, %f197;
	fma.rn.ftz.f32 	%f196, %f11, %f198, %f196;
	fma.rn.ftz.f32 	%f195, %f12, %f198, %f195;
	fma.rn.ftz.f32 	%f194, %f198, 0f3F7D70A4, %f194;
	setp.lt.ftz.f32	%p17, %f198, 0f3A83126F;
	setp.gt.ftz.f32	%p18, %f194, %f193;
	or.pred  	%p19, %p17, %p18;
	mov.u32 	%r32, %r4;
	@%p19 bra 	BB10_13;

	min.ftz.f32 	%f201, %f201, %f60;
	min.ftz.f32 	%f200, %f200, %f61;
	min.ftz.f32 	%f199, %f199, %f62;
	add.s32 	%r5, %r1, 4;
	ld.global.u32 	%r19, [max_iterations];
	ld.global.f32 	%f134, [global_t];
	ld.global.u32 	%r18, [hit_hook];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r18);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f197;
	st.param.f32	[param0+4], %f196;
	st.param.f32	[param0+8], %f195;
	.param .b32 param1;
	st.param.b32	[param1+0], %r19;
	.param .b32 param2;
	st.param.f32	[param2+0], %f134;
	.param .align 16 .b8 retval0[16];
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_4;
	ld.param.f32	%f198, [retval0+0];
	ld.param.f32	%f72, [retval0+4];
	ld.param.f32	%f73, [retval0+8];
	ld.param.f32	%f74, [retval0+12];
	}
	// Callseq End 4
	fma.rn.ftz.f32 	%f197, %f10, %f198, %f197;
	fma.rn.ftz.f32 	%f196, %f11, %f198, %f196;
	fma.rn.ftz.f32 	%f195, %f12, %f198, %f195;
	fma.rn.ftz.f32 	%f194, %f198, 0f3F7D70A4, %f194;
	setp.lt.ftz.f32	%p20, %f198, 0f3A83126F;
	setp.gt.ftz.f32	%p21, %f194, %f193;
	or.pred  	%p22, %p20, %p21;
	mov.u32 	%r32, %r5;
	@%p22 bra 	BB10_13;

	min.ftz.f32 	%f201, %f201, %f72;
	min.ftz.f32 	%f200, %f200, %f73;
	min.ftz.f32 	%f199, %f199, %f74;
	add.s32 	%r33, %r1, 5;
	setp.lt.u32	%p23, %r33, 800;
	@%p23 bra 	BB10_7;
	bra.uni 	BB10_14;

BB10_13:
	st.global.u32 	[iterations], %r32;

BB10_14:
	setp.geu.ftz.f32	%p24, %f198, 0f3A83126F;
	@%p24 bra 	BB10_17;

	// inline asm
	call (%r20), _rt_potential_intersection, (%f194);
	// inline asm
	setp.eq.s32	%p25, %r20, 0;
	@%p25 bra 	BB10_17;

	ld.global.u32 	%r29, [max_iterations];
	cvt.rn.f32.u32	%f136, %r29;
	mul.ftz.f32 	%f137, %f136, 0f3F000000;
	cvt.rzi.ftz.u32.f32	%r30, %f137;
	ld.global.f32 	%f138, [DEL];
	add.ftz.f32 	%f139, %f197, %f138;
	add.ftz.f32 	%f140, %f196, 0f00000000;
	add.ftz.f32 	%f141, %f195, 0f00000000;
	ld.global.f32 	%f142, [global_t];
	ld.global.u32 	%r21, [hit_hook];
	// inline asm
	call (%rd6), _rt_callable_program_from_id_64, (%r21);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f139;
	st.param.f32	[param0+4], %f140;
	st.param.f32	[param0+8], %f141;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f142;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_5 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd6, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_5;
	ld.param.f32	%f143, [retval0+0];
	ld.param.f32	%f144, [retval0+4];
	ld.param.f32	%f145, [retval0+8];
	ld.param.f32	%f146, [retval0+12];
	}
	// Callseq End 5
	mov.u32 	%r28, 0;
	sub.ftz.f32 	%f147, %f197, %f138;
	add.ftz.f32 	%f148, %f196, 0f80000000;
	add.ftz.f32 	%f149, %f195, 0f80000000;
	ld.global.f32 	%f150, [global_t];
	ld.global.u32 	%r22, [hit_hook];
	// inline asm
	call (%rd7), _rt_callable_program_from_id_64, (%r22);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f147;
	st.param.f32	[param0+4], %f148;
	st.param.f32	[param0+8], %f149;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f150;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_6 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd7, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_6;
	ld.param.f32	%f151, [retval0+0];
	ld.param.f32	%f152, [retval0+4];
	ld.param.f32	%f153, [retval0+8];
	ld.param.f32	%f154, [retval0+12];
	}
	// Callseq End 6
	sub.ftz.f32 	%f155, %f143, %f151;
	add.ftz.f32 	%f156, %f196, %f138;
	add.ftz.f32 	%f157, %f197, 0f00000000;
	ld.global.f32 	%f158, [global_t];
	ld.global.u32 	%r23, [hit_hook];
	// inline asm
	call (%rd8), _rt_callable_program_from_id_64, (%r23);
	// inline asm
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f157;
	st.param.f32	[param0+4], %f156;
	st.param.f32	[param0+8], %f141;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f158;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_7 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd8, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_7;
	ld.param.f32	%f159, [retval0+0];
	ld.param.f32	%f160, [retval0+4];
	ld.param.f32	%f161, [retval0+8];
	ld.param.f32	%f162, [retval0+12];
	}
	// Callseq End 7
	sub.ftz.f32 	%f163, %f196, %f138;
	add.ftz.f32 	%f164, %f197, 0f80000000;
	ld.global.f32 	%f165, [global_t];
	ld.global.u32 	%r24, [hit_hook];
	// inline asm
	call (%rd9), _rt_callable_program_from_id_64, (%r24);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f164;
	st.param.f32	[param0+4], %f163;
	st.param.f32	[param0+8], %f149;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f165;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_8 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd9, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_8;
	ld.param.f32	%f166, [retval0+0];
	ld.param.f32	%f167, [retval0+4];
	ld.param.f32	%f168, [retval0+8];
	ld.param.f32	%f169, [retval0+12];
	}
	// Callseq End 8
	sub.ftz.f32 	%f170, %f159, %f166;
	add.ftz.f32 	%f171, %f195, %f138;
	ld.global.f32 	%f172, [global_t];
	ld.global.u32 	%r25, [hit_hook];
	// inline asm
	call (%rd10), _rt_callable_program_from_id_64, (%r25);
	// inline asm
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f157;
	st.param.f32	[param0+4], %f140;
	st.param.f32	[param0+8], %f171;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f172;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_9 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd10, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_9;
	ld.param.f32	%f173, [retval0+0];
	ld.param.f32	%f174, [retval0+4];
	ld.param.f32	%f175, [retval0+8];
	ld.param.f32	%f176, [retval0+12];
	}
	// Callseq End 9
	sub.ftz.f32 	%f177, %f195, %f138;
	ld.global.f32 	%f178, [global_t];
	ld.global.u32 	%r26, [hit_hook];
	// inline asm
	call (%rd11), _rt_callable_program_from_id_64, (%r26);
	// inline asm
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f164;
	st.param.f32	[param0+4], %f148;
	st.param.f32	[param0+8], %f177;
	.param .b32 param1;
	st.param.b32	[param1+0], %r30;
	.param .b32 param2;
	st.param.f32	[param2+0], %f178;
	.param .align 16 .b8 retval0[16];
	// inline asm
	prototype_10 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .align 4 .b8 _[12], .param .b32 _, .param .b32 _);
	// inline asm
	call (retval0), 
	%rd11, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_10;
	ld.param.f32	%f179, [retval0+0];
	ld.param.f32	%f180, [retval0+4];
	ld.param.f32	%f181, [retval0+8];
	ld.param.f32	%f182, [retval0+12];
	}
	// Callseq End 10
	sub.ftz.f32 	%f183, %f173, %f179;
	mul.ftz.f32 	%f184, %f170, %f170;
	fma.rn.ftz.f32 	%f185, %f155, %f155, %f184;
	fma.rn.ftz.f32 	%f186, %f183, %f183, %f185;
	sqrt.approx.ftz.f32 	%f187, %f186;
	rcp.approx.ftz.f32 	%f188, %f187;
	mul.ftz.f32 	%f189, %f183, %f188;
	mul.ftz.f32 	%f190, %f170, %f188;
	mul.ftz.f32 	%f191, %f155, %f188;
	st.global.v2.f32 	[normal], {%f191, %f190};
	st.global.f32 	[normal+8], %f189;
	st.global.v2.f32 	[orbitTrap], {%f201, %f200};
	st.global.f32 	[orbitTrap+8], %f199;
	st.global.v2.f32 	[geometric_normal], {%f191, %f190};
	st.global.f32 	[geometric_normal+8], %f189;
	st.global.v2.f32 	[shading_normal], {%f191, %f190};
	st.global.f32 	[shading_normal+8], %f189;
	// inline asm
	call (%r27), _rt_report_intersection, (%r28);
	// inline asm

BB10_17:
	ret;
}

.visible .entry _Z6boundsiPf(
	.param .u32 _Z6boundsiPf_param_0,
	.param .u64 _Z6boundsiPf_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z6boundsiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, -1078774989;
	st.global.u32 	[%rd2], %r1;
	st.global.u32 	[%rd2+8], %r1;
	st.global.u32 	[%rd2+4], %r1;
	mov.u32 	%r2, 1068708659;
	st.global.u32 	[%rd2+12], %r2;
	st.global.u32 	[%rd2+16], %r2;
	st.global.u32 	[%rd2+20], %r2;
	ret;
}

.visible .entry _Z14diffuseEmitterv(

)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<4>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<6>;


	mov.u64 	%rd1, current_prd;
	add.s64 	%rd2, %rd1, 128;
	ldu.global.u32 	%r1, [%rd2];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB12_2;

	mov.u64 	%rd3, emission_color;
	add.s64 	%rd4, %rd3, 4;
	add.s64 	%rd5, %rd3, 8;
	ldu.global.f32 	%f1, [%rd5];
	ldu.global.f32 	%f2, [%rd4];
	ldu.global.f32 	%f3, [emission_color];
	mov.f32 	%f4, 0f3F800000;
	st.global.v4.f32 	[current_prd], {%f3, %f2, %f1, %f4};
	mov.u32 	%r2, 0;
	st.global.u32 	[current_prd+24], %r2;
	mov.f32 	%f5, 0f00000000;
	st.global.v2.f32 	[current_prd+16], {%f5, %f5};

BB12_2:
	mov.u32 	%r3, 1;
	st.global.u32 	[current_prd+132], %r3;
	ret;
}

.visible .entry _Z6shadowv(

)
{
	.reg .s16 	%rs<2>;


	mov.u16 	%rs1, 1;
	st.global.u8 	[current_prd_shadow], %rs1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

.visible .entry _Z17pathtrace_diffusev(

)
{
	.local .align 8 .b8 	__local_depot14[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<45>;
	.reg .f32 	%f<304>;
	.reg .s64 	%rd<23>;
	.reg .f64 	%fd<14>;


	mov.u64 	%SPL, __local_depot14;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd9, shading_normal;
	add.s64 	%rd10, %rd9, 8;
	ldu.global.f32 	%f45, [%rd10];
	ldu.global.v2.f32 	{%f55, %f56}, [shading_normal];
	mov.u32 	%r6, 7937;
	mov.f32 	%f303, 0f00000000;
	// inline asm
	call (%f39, %f40, %f41, %f42), _rt_transform_tuple, (%r6, %f55, %f56, %f45, %f303);
	// inline asm
	mul.ftz.f32 	%f57, %f40, %f40;
	fma.rn.ftz.f32 	%f58, %f39, %f39, %f57;
	fma.rn.ftz.f32 	%f59, %f41, %f41, %f58;
	sqrt.approx.ftz.f32 	%f60, %f59;
	rcp.approx.ftz.f32 	%f61, %f60;
	mul.ftz.f32 	%f62, %f39, %f61;
	mul.ftz.f32 	%f63, %f40, %f61;
	mul.ftz.f32 	%f64, %f41, %f61;
	ld.global.f32 	%f53, [geometric_normal+8];
	ld.global.v2.f32 	{%f65, %f66}, [geometric_normal];
	// inline asm
	call (%f47, %f48, %f49, %f50), _rt_transform_tuple, (%r6, %f65, %f66, %f53, %f303);
	// inline asm
	mul.ftz.f32 	%f67, %f48, %f48;
	fma.rn.ftz.f32 	%f68, %f47, %f47, %f67;
	fma.rn.ftz.f32 	%f69, %f49, %f49, %f68;
	sqrt.approx.ftz.f32 	%f70, %f69;
	rcp.approx.ftz.f32 	%f71, %f70;
	mul.ftz.f32 	%f72, %f47, %f71;
	mul.ftz.f32 	%f73, %f48, %f71;
	mul.ftz.f32 	%f74, %f49, %f71;
	ld.global.v2.f32 	{%f75, %f76}, [ray+8];
	neg.ftz.f32 	%f78, %f76;
	ld.global.v2.f32 	{%f79, %f80}, [ray+16];
	mul.ftz.f32 	%f81, %f72, %f78;
	mul.ftz.f32 	%f83, %f73, %f79;
	sub.ftz.f32 	%f84, %f81, %f83;
	mul.ftz.f32 	%f86, %f74, %f80;
	sub.ftz.f32 	%f87, %f84, %f86;
	mov.b32 	 %r9, %f87;
	and.b32  	%r10, %r9, -2147483648;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	 %f88, %r11;
	mul.ftz.f32 	%f1, %f62, %f88;
	mul.ftz.f32 	%f2, %f63, %f88;
	mul.ftz.f32 	%f3, %f64, %f88;
	ld.global.f32 	%f89, [t_hit];
	ld.global.v2.f32 	{%f90, %f91}, [ray];
	fma.rn.ftz.f32 	%f4, %f76, %f89, %f90;
	fma.rn.ftz.f32 	%f5, %f79, %f89, %f91;
	fma.rn.ftz.f32 	%f6, %f80, %f89, %f75;
	ld.global.u32 	%r12, [current_prd+120];
	mad.lo.s32 	%r13, %r12, 389569705, 1196435762;
	st.global.u32 	[current_prd+120], %r13;
	cvt.rn.f32.u32	%f95, %r13;
	add.ftz.f32 	%f96, %f74, 0f3F800000;
	mul.ftz.f32 	%f97, %f72, %f72;
	sub.ftz.f32 	%f98, %f96, %f97;
	mul.ftz.f32 	%f99, %f73, %f73;
	sub.ftz.f32 	%f100, %f96, %f99;
	neg.ftz.f32 	%f101, %f72;
	mul.ftz.f32 	%f102, %f73, %f101;
	rcp.approx.ftz.f32 	%f103, %f96;
	mul.ftz.f32 	%f104, %f98, %f103;
	mul.ftz.f32 	%f105, %f100, %f103;
	mul.ftz.f32 	%f106, %f102, %f103;
	cvt.ftz.f64.f32	%fd1, %f95;
	add.f64 	%fd2, %fd1, 0d40538EE978D4FDF4;
	cvt.rn.ftz.f32.f64	%f107, %fd2;
	sin.approx.ftz.f32 	%f108, %f107;
	cvt.ftz.f64.f32	%fd3, %f108;
	mul.f64 	%fd4, %fd3, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f109, %fd4;
	cvt.rmi.ftz.f32.f32	%f110, %f109;
	sub.ftz.f32 	%f111, %f109, %f110;
	add.f64 	%fd5, %fd1, 0d4025BEF9DB22D0E5;
	cvt.rn.ftz.f32.f64	%f112, %fd5;
	sin.approx.ftz.f32 	%f113, %f112;
	cvt.ftz.f64.f32	%fd6, %f113;
	mul.f64 	%fd7, %fd6, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f114, %fd7;
	cvt.rmi.ftz.f32.f32	%f115, %f114;
	sub.ftz.f32 	%f116, %f114, %f115;
	cvt.ftz.f64.f32	%fd8, %f116;
	mul.f64 	%fd9, %fd8, 0d401921FB3FA6DEFC;
	cvt.rn.ftz.f32.f64	%f117, %fd9;
	sqrt.approx.ftz.f32 	%f118, %f111;
	cos.approx.ftz.f32 	%f119, %f117;
	mul.ftz.f32 	%f120, %f119, %f101;
	sin.approx.ftz.f32 	%f121, %f117;
	mul.ftz.f32 	%f122, %f106, %f121;
	mul.ftz.f32 	%f123, %f105, %f121;
	fma.rn.ftz.f32 	%f124, %f104, %f119, %f122;
	fma.rn.ftz.f32 	%f125, %f106, %f119, %f123;
	mul.ftz.f32 	%f126, %f121, %f73;
	sub.ftz.f32 	%f127, %f120, %f126;
	cvt.ftz.f64.f32	%fd10, %f111;
	mov.f64 	%fd11, 0d3FF0000000000000;
	sub.f64 	%fd12, %fd11, %fd10;
	sqrt.rn.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f128, %fd13;
	mul.ftz.f32 	%f129, %f72, %f128;
	mul.ftz.f32 	%f130, %f73, %f128;
	mul.ftz.f32 	%f131, %f74, %f128;
	fma.rn.ftz.f32 	%f132, %f127, %f118, %f131;
	mov.u32 	%r44, 0;
	st.global.u32 	[current_prd+128], %r44;
	fma.rn.ftz.f32 	%f133, %f125, %f118, %f130;
	fma.rn.ftz.f32 	%f134, %f124, %f118, %f129;
	st.global.v2.f32 	[current_prd+96], {%f134, %f133};
	st.global.f32 	[current_prd+104], %f132;
	ld.global.f32 	%f135, [diffuse_color];
	ld.global.f32 	%f136, [diffuse_color+4];
	ld.global.f32 	%f137, [diffuse_color+8];
	st.global.f32 	[current_prd+116], %f137;
	st.global.f32 	[current_prd+112], %f136;
	st.global.f32 	[current_prd+108], %f135;
	cvta.global.u64 	%rd8, lights;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 64;
	// inline asm
	call (%rd4, %rd5, %rd6, %rd7), _rt_buffer_get_size_64, (%rd8, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r1, %rd4;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB14_2;

	mov.f32 	%f303, 0f00000000;
	mov.f32 	%f302, %f303;
	mov.f32 	%f301, %f303;
	bra.uni 	BB14_9;

BB14_2:
	mul.ftz.f32 	%f141, %f2, 0f00000000;
	sub.ftz.f32 	%f142, %f141, %f3;
	mul.ftz.f32 	%f143, %f3, 0f00000000;
	mul.ftz.f32 	%f144, %f1, 0f00000000;
	sub.ftz.f32 	%f145, %f143, %f144;
	sub.ftz.f32 	%f146, %f1, %f141;
	mul.ftz.f32 	%f147, %f145, %f145;
	fma.rn.ftz.f32 	%f148, %f142, %f142, %f147;
	fma.rn.ftz.f32 	%f149, %f146, %f146, %f148;
	setp.lt.ftz.f32	%p2, %f149, 0f3A83126F;
	sub.ftz.f32 	%f150, %f141, %f143;
	selp.f32	%f7, %f150, %f142, %p2;
	sub.ftz.f32 	%f151, %f3, %f144;
	selp.f32	%f8, %f151, %f145, %p2;
	sub.ftz.f32 	%f152, %f144, %f2;
	selp.f32	%f9, %f152, %f146, %p2;
	mul.ftz.f32 	%f153, %f8, %f8;
	fma.rn.ftz.f32 	%f154, %f7, %f7, %f153;
	fma.rn.ftz.f32 	%f10, %f9, %f9, %f154;
	mov.f32 	%f302, %f303;
	mov.f32 	%f301, %f303;
	mov.u64 	%rd11, 0;
	sqrt.approx.ftz.f32 	%f237, %f10;
	rcp.approx.ftz.f32 	%f238, %f237;
	mov.u64 	%rd22, %rd11;

BB14_3:
	mov.u64 	%rd1, %rd22;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd1, %rd11, %rd11, %rd11);
	// inline asm
	ld.f32 	%f16, [%rd12+56];
	ld.f32 	%f15, [%rd12+52];
	ld.f32 	%f14, [%rd12+48];
	ld.f32 	%f155, [%rd12+44];
	ld.f32 	%f156, [%rd12+36];
	ld.f32 	%f157, [%rd12+40];
	ld.f32 	%f158, [%rd12+32];
	ld.f32 	%f159, [%rd12+28];
	ld.f32 	%f160, [%rd12+24];
	ld.f32 	%f161, [%rd12+20];
	ld.f32 	%f162, [%rd12+8];
	ld.f32 	%f163, [%rd12+16];
	ld.f32 	%f164, [%rd12+4];
	ld.f32 	%f165, [%rd12+12];
	ld.f32 	%f166, [%rd12];
	ld.global.u32 	%r18, [current_prd+120];
	mad.lo.s32 	%r19, %r18, 1664525, 1013904223;
	and.b32  	%r20, %r19, 16777215;
	cvt.rn.f32.u32	%f167, %r20;
	mov.f32 	%f168, 0f4B800000;
	div.approx.ftz.f32 	%f169, %f167, %f168;
	mad.lo.s32 	%r3, %r19, 1664525, 1013904223;
	st.global.u32 	[current_prd+120], %r3;
	and.b32  	%r21, %r3, 16777215;
	cvt.rn.f32.u32	%f170, %r21;
	div.approx.ftz.f32 	%f171, %f170, %f168;
	fma.rn.ftz.f32 	%f172, %f165, %f169, %f166;
	fma.rn.ftz.f32 	%f173, %f163, %f169, %f164;
	fma.rn.ftz.f32 	%f174, %f161, %f169, %f162;
	fma.rn.ftz.f32 	%f175, %f160, %f171, %f172;
	fma.rn.ftz.f32 	%f176, %f159, %f171, %f173;
	fma.rn.ftz.f32 	%f177, %f158, %f171, %f174;
	sub.ftz.f32 	%f178, %f175, %f4;
	sub.ftz.f32 	%f179, %f176, %f5;
	sub.ftz.f32 	%f180, %f177, %f6;
	mul.ftz.f32 	%f181, %f179, %f179;
	fma.rn.ftz.f32 	%f182, %f178, %f178, %f181;
	fma.rn.ftz.f32 	%f183, %f180, %f180, %f182;
	sqrt.approx.ftz.f32 	%f17, %f183;
	rcp.approx.ftz.f32 	%f184, %f17;
	mul.ftz.f32 	%f18, %f178, %f184;
	mul.ftz.f32 	%f19, %f179, %f184;
	mul.ftz.f32 	%f20, %f180, %f184;
	ld.global.v2.f32 	{%f185, %f186}, [shading_normal];
	mul.ftz.f32 	%f187, %f186, %f19;
	fma.rn.ftz.f32 	%f188, %f185, %f18, %f187;
	ld.global.f32 	%f23, [shading_normal+8];
	fma.rn.ftz.f32 	%f24, %f23, %f20, %f188;
	mul.ftz.f32 	%f189, %f157, %f19;
	fma.rn.ftz.f32 	%f190, %f156, %f18, %f189;
	fma.rn.ftz.f32 	%f25, %f155, %f20, %f190;
	mul.ftz.f32 	%f191, %f163, %f158;
	mul.ftz.f32 	%f192, %f161, %f159;
	sub.ftz.f32 	%f193, %f191, %f192;
	mul.ftz.f32 	%f194, %f161, %f160;
	mul.ftz.f32 	%f195, %f165, %f158;
	sub.ftz.f32 	%f196, %f194, %f195;
	mul.ftz.f32 	%f197, %f165, %f159;
	mul.ftz.f32 	%f198, %f163, %f160;
	sub.ftz.f32 	%f199, %f197, %f198;
	mul.ftz.f32 	%f200, %f196, %f196;
	fma.rn.ftz.f32 	%f201, %f193, %f193, %f200;
	fma.rn.ftz.f32 	%f26, %f199, %f199, %f201;
	setp.gt.ftz.f32	%p3, %f24, 0f00000000;
	setp.gt.ftz.f32	%p4, %f25, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB14_8;
	bra.uni 	BB14_4;

BB14_4:
	add.u64 	%rd18, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd18;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd2], %rs1;
	mov.u32 	%r25, 0;
	st.local.u32 	[%rd2+16], %r25;
	st.local.u32 	[%rd2+4], %r25;
	st.local.u32 	[%rd2+8], %r25;
	st.local.u32 	[%rd2+12], %r25;
	ld.global.u32 	%r26, [frame_number];
	add.s32 	%r27, %r26, %r3;
	st.local.u32 	[%rd2+20], %r27;
	fma.rn.ftz.f32 	%f202, %f185, 0f38D1B717, %f4;
	fma.rn.ftz.f32 	%f203, %f186, 0f38D1B717, %f5;
	fma.rn.ftz.f32 	%f204, %f23, 0f38D1B717, %f6;
	ld.global.u32 	%r22, [top_shadower];
	ld.global.f32 	%f208, [scene_epsilon];
	ld.global.u32 	%r23, [pathtrace_shadow_ray_type];
	mov.u32 	%r24, 24;
	// inline asm
	call _rt_trace_64, (%r22, %f202, %f203, %f204, %f18, %f19, %f20, %r23, %f208, %f17, %rd18, %r24);
	// inline asm
	ld.local.u8 	%rs2, [%rd2];
	setp.eq.s16	%p6, %rs2, 0;
	@%p6 bra 	BB14_7;

	ld.global.u32 	%r28, [current_prd+124];
	setp.gt.s32	%p7, %r28, 2;
	@%p7 bra 	BB14_8;

	mov.f32 	%f300, 0f4B800000;
	ld.global.u64 	%rd20, [current_prd+120];
	cvt.u32.u64	%r32, %rd20;
	mad.lo.s32 	%r33, %r32, 1664525, 1013904223;
	and.b32  	%r34, %r33, 16777215;
	cvt.rn.f32.u32	%f218, %r34;
	div.approx.ftz.f32 	%f220, %f218, %f300;
	mad.lo.s32 	%r35, %r33, 1664525, 1013904223;
	and.b32  	%r36, %r35, 16777215;
	cvt.rn.f32.u32	%f221, %r36;
	div.approx.ftz.f32 	%f222, %f221, %f300;
	sqrt.approx.ftz.f32 	%f223, %f220;
	mul.ftz.f32 	%f224, %f222, 0f40C90FDB;
	cos.approx.ftz.f32 	%f225, %f224;
	mul.ftz.f32 	%f226, %f223, %f225;
	sin.approx.ftz.f32 	%f227, %f224;
	mul.ftz.f32 	%f228, %f223, %f227;
	mul.ftz.f32 	%f229, %f226, %f226;
	mov.f32 	%f230, 0f3F800000;
	sub.ftz.f32 	%f231, %f230, %f229;
	mul.ftz.f32 	%f232, %f228, %f228;
	sub.ftz.f32 	%f233, %f231, %f232;
	ld.local.f32 	%f212, [%rd2+12];
	ld.local.f32 	%f211, [%rd2+8];
	ld.local.f32 	%f210, [%rd2+4];
	mov.f32 	%f234, 0f00000000;
	st.global.v4.f32 	[current_prd], {%f234, %f234, %f234, %f234};
	max.ftz.f32 	%f235, %f234, %f233;
	sqrt.approx.ftz.f32 	%f236, %f235;
	shr.u64 	%rd21, %rd20, 32;
	cvt.u32.u64	%r37, %rd21;
	mul.ftz.f32 	%f239, %f7, %f238;
	mul.ftz.f32 	%f240, %f8, %f238;
	mul.ftz.f32 	%f241, %f9, %f238;
	mul.ftz.f32 	%f242, %f2, %f241;
	mul.ftz.f32 	%f243, %f3, %f240;
	sub.ftz.f32 	%f244, %f242, %f243;
	mul.ftz.f32 	%f245, %f3, %f239;
	mul.ftz.f32 	%f246, %f1, %f241;
	sub.ftz.f32 	%f247, %f245, %f246;
	mul.ftz.f32 	%f248, %f1, %f240;
	mul.ftz.f32 	%f249, %f2, %f239;
	sub.ftz.f32 	%f250, %f248, %f249;
	mul.ftz.f32 	%f251, %f244, %f228;
	mul.ftz.f32 	%f252, %f247, %f228;
	mul.ftz.f32 	%f253, %f250, %f228;
	fma.rn.ftz.f32 	%f254, %f239, %f226, %f251;
	fma.rn.ftz.f32 	%f255, %f240, %f226, %f252;
	fma.rn.ftz.f32 	%f256, %f241, %f226, %f253;
	fma.rn.ftz.f32 	%f213, %f1, %f236, %f254;
	fma.rn.ftz.f32 	%f214, %f2, %f236, %f255;
	fma.rn.ftz.f32 	%f215, %f3, %f236, %f256;
	ld.global.u32 	%r38, [frame_number];
	cvta.global.u64 	%rd19, current_prd;
	add.s32 	%r39, %r38, %r35;
	add.s32 	%r40, %r37, 1;
	st.global.v2.u32 	[current_prd+120], {%r39, %r40};
	ld.global.u32 	%r29, [top_object];
	ld.global.f32 	%f216, [scene_epsilon];
	ld.global.u32 	%r30, [pathtrace_ray_type];
	mov.f32 	%f217, 0f6C4ECB8F;
	mov.u32 	%r31, 144;
	// inline asm
	call _rt_trace_64, (%r29, %f210, %f211, %f212, %f213, %f214, %f215, %r30, %f216, %f217, %rd19, %r31);
	// inline asm
	ld.global.v4.f32 	{%f257, %f258, %f259, %f260}, [current_prd];
	add.ftz.f32 	%f303, %f303, %f257;
	add.ftz.f32 	%f302, %f302, %f258;
	add.ftz.f32 	%f301, %f301, %f259;
	bra.uni 	BB14_8;

BB14_7:
	sqrt.approx.ftz.f32 	%f264, %f26;
	mul.ftz.f32 	%f265, %f24, %f25;
	mul.ftz.f32 	%f266, %f265, %f264;
	mul.ftz.f32 	%f267, %f17, 0f40490FDB;
	mul.ftz.f32 	%f268, %f267, %f17;
	div.approx.ftz.f32 	%f269, %f266, %f268;
	fma.rn.ftz.f32 	%f303, %f14, %f269, %f303;
	fma.rn.ftz.f32 	%f302, %f15, %f269, %f302;
	fma.rn.ftz.f32 	%f301, %f16, %f269, %f301;

BB14_8:
	add.s64 	%rd3, %rd1, 1;
	add.s32 	%r44, %r44, 1;
	setp.lt.u32	%p8, %r44, %r1;
	mov.u64 	%rd22, %rd3;
	@%p8 bra 	BB14_3;

BB14_9:
	ld.global.u32 	%r41, [iterations];
	cvt.rn.f32.u32	%f273, %r41;
	ld.global.u32 	%r42, [max_iterations];
	cvt.rn.f32.u32	%f274, %r42;
	ld.global.v2.f32 	{%f275, %f276}, [orbitTrap];
	lg2.approx.ftz.f32 	%f278, %f275;
	ex2.approx.ftz.f32 	%f279, %f278;
	mov.f32 	%f280, 0f3DCCCCCD;
	sub.ftz.f32 	%f281, %f280, 0f3F2B851F;
	mov.f32 	%f282, 0f3E4CCCCD;
	sub.ftz.f32 	%f283, %f282, 0f3DCCCCCD;
	mov.f32 	%f284, 0f3F666666;
	sub.ftz.f32 	%f285, %f284, 0f3D4CCCCD;
	ld.global.f32 	%f286, [orbitTrap+8];
	mov.f32 	%f287, 0f3F800000;
	st.global.v4.f32 	[current_prd], {%f303, %f302, %f301, %f287};
	ld.global.v2.f32 	{%f288, %f289}, [shading_normal];
	ld.global.f32 	%f292, [shading_normal+8];
	st.global.v4.f32 	[current_prd+16], {%f288, %f289, %f292, %f4};
	st.global.v2.f32 	[current_prd+32], {%f5, %f6};
	ld.global.f32 	%f294, [t_hit];
	st.global.v2.f32 	[current_prd+56], {%f276, %f286};
	div.approx.ftz.f32 	%f295, %f273, %f274;
	st.global.v2.f32 	[current_prd+64], {%f294, %f295};
	ld.global.f32 	%f296, [orbitTrap];
	fma.rn.ftz.f32 	%f297, %f283, %f279, 0f3DCCCCCD;
	fma.rn.ftz.f32 	%f298, %f281, %f279, 0f3F2B851F;
	st.global.v2.f32 	[current_prd+40], {%f298, %f297};
	fma.rn.ftz.f32 	%f299, %f285, %f279, 0f3D4CCCCD;
	st.global.v2.f32 	[current_prd+48], {%f299, %f296};
	st.global.u32 	[current_prd+132], %r7;
	ret;
}

.visible .entry _Z14simple_diffusev(

)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<23>;
	.reg .f32 	%f<205>;
	.reg .s64 	%rd<18>;
	.reg .f64 	%fd<14>;


	mov.u64 	%rd8, shading_normal;
	add.s64 	%rd9, %rd8, 8;
	ldu.global.f32 	%f29, [%rd9];
	ldu.global.v2.f32 	{%f39, %f40}, [shading_normal];
	mov.u32 	%r5, 7937;
	mov.f32 	%f204, 0f00000000;
	// inline asm
	call (%f23, %f24, %f25, %f26), _rt_transform_tuple, (%r5, %f39, %f40, %f29, %f204);
	// inline asm
	ld.global.f32 	%f37, [geometric_normal+8];
	ld.global.v2.f32 	{%f41, %f42}, [geometric_normal];
	// inline asm
	call (%f31, %f32, %f33, %f34), _rt_transform_tuple, (%r5, %f41, %f42, %f37, %f204);
	// inline asm
	mul.ftz.f32 	%f43, %f32, %f32;
	fma.rn.ftz.f32 	%f44, %f31, %f31, %f43;
	fma.rn.ftz.f32 	%f45, %f33, %f33, %f44;
	sqrt.approx.ftz.f32 	%f46, %f45;
	rcp.approx.ftz.f32 	%f47, %f46;
	mul.ftz.f32 	%f48, %f31, %f47;
	mul.ftz.f32 	%f49, %f32, %f47;
	mul.ftz.f32 	%f50, %f33, %f47;
	ld.global.f32 	%f51, [t_hit];
	ld.global.v2.f32 	{%f52, %f53}, [ray+8];
	ld.global.v2.f32 	{%f54, %f55}, [ray+16];
	ld.global.v2.f32 	{%f56, %f57}, [ray];
	fma.rn.ftz.f32 	%f1, %f53, %f51, %f56;
	fma.rn.ftz.f32 	%f2, %f54, %f51, %f57;
	fma.rn.ftz.f32 	%f3, %f55, %f51, %f52;
	ld.global.u32 	%r8, [current_prd+120];
	mad.lo.s32 	%r9, %r8, 389569705, 1196435762;
	st.global.u32 	[current_prd+120], %r9;
	cvt.rn.f32.u32	%f64, %r9;
	add.ftz.f32 	%f65, %f50, 0f3F800000;
	mul.ftz.f32 	%f66, %f48, %f48;
	sub.ftz.f32 	%f67, %f65, %f66;
	mul.ftz.f32 	%f68, %f49, %f49;
	sub.ftz.f32 	%f69, %f65, %f68;
	neg.ftz.f32 	%f70, %f48;
	mul.ftz.f32 	%f71, %f49, %f70;
	rcp.approx.ftz.f32 	%f72, %f65;
	mul.ftz.f32 	%f73, %f67, %f72;
	mul.ftz.f32 	%f74, %f69, %f72;
	mul.ftz.f32 	%f75, %f71, %f72;
	cvt.ftz.f64.f32	%fd1, %f64;
	add.f64 	%fd2, %fd1, 0d40538EE978D4FDF4;
	cvt.rn.ftz.f32.f64	%f76, %fd2;
	sin.approx.ftz.f32 	%f77, %f76;
	cvt.ftz.f64.f32	%fd3, %f77;
	mul.f64 	%fd4, %fd3, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f78, %fd4;
	cvt.rmi.ftz.f32.f32	%f79, %f78;
	sub.ftz.f32 	%f80, %f78, %f79;
	add.f64 	%fd5, %fd1, 0d4025BEF9DB22D0E5;
	cvt.rn.ftz.f32.f64	%f81, %fd5;
	sin.approx.ftz.f32 	%f82, %f81;
	cvt.ftz.f64.f32	%fd6, %f82;
	mul.f64 	%fd7, %fd6, 0d40E55DD17318FC50;
	cvt.rn.ftz.f32.f64	%f83, %fd7;
	cvt.rmi.ftz.f32.f32	%f84, %f83;
	sub.ftz.f32 	%f85, %f83, %f84;
	cvt.ftz.f64.f32	%fd8, %f85;
	mul.f64 	%fd9, %fd8, 0d401921FB3FA6DEFC;
	cvt.rn.ftz.f32.f64	%f86, %fd9;
	sqrt.approx.ftz.f32 	%f87, %f80;
	cos.approx.ftz.f32 	%f88, %f86;
	mul.ftz.f32 	%f89, %f88, %f70;
	sin.approx.ftz.f32 	%f90, %f86;
	mul.ftz.f32 	%f91, %f75, %f90;
	mul.ftz.f32 	%f92, %f74, %f90;
	fma.rn.ftz.f32 	%f93, %f73, %f88, %f91;
	fma.rn.ftz.f32 	%f94, %f75, %f88, %f92;
	mul.ftz.f32 	%f95, %f90, %f49;
	sub.ftz.f32 	%f96, %f89, %f95;
	cvt.ftz.f64.f32	%fd10, %f80;
	mov.f64 	%fd11, 0d3FF0000000000000;
	sub.f64 	%fd12, %fd11, %fd10;
	sqrt.rn.f64 	%fd13, %fd12;
	cvt.rn.ftz.f32.f64	%f97, %fd13;
	mul.ftz.f32 	%f98, %f48, %f97;
	mul.ftz.f32 	%f99, %f49, %f97;
	mul.ftz.f32 	%f100, %f50, %f97;
	fma.rn.ftz.f32 	%f101, %f96, %f87, %f100;
	mov.u32 	%r22, 0;
	st.global.u32 	[current_prd+128], %r22;
	fma.rn.ftz.f32 	%f102, %f94, %f87, %f99;
	fma.rn.ftz.f32 	%f103, %f93, %f87, %f98;
	st.global.v2.f32 	[current_prd+96], {%f103, %f102};
	st.global.f32 	[current_prd+104], %f101;
	ld.global.f32 	%f104, [diffuse_color];
	ld.global.f32 	%f105, [diffuse_color+4];
	ld.global.f32 	%f106, [diffuse_color+8];
	st.global.f32 	[current_prd+116], %f106;
	st.global.f32 	[current_prd+112], %f105;
	st.global.f32 	[current_prd+108], %f104;
	cvta.global.u64 	%rd7, lights;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 64;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r6, %r7);
	// inline asm
	cvt.u32.u64	%r1, %rd3;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB15_2;

	mov.f32 	%f204, 0f00000000;
	mov.f32 	%f203, %f204;
	mov.f32 	%f202, %f204;
	bra.uni 	BB15_6;

BB15_2:
	mov.f32 	%f203, %f204;
	mov.f32 	%f202, %f204;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd17, %rd10;

BB15_3:
	mov.u64 	%rd1, %rd17;
	// inline asm
	call (%rd11), _rt_buffer_get_64, (%rd7, %r6, %r7, %rd1, %rd10, %rd10, %rd10);
	// inline asm
	ld.f32 	%f9, [%rd11+56];
	ld.f32 	%f8, [%rd11+52];
	ld.f32 	%f7, [%rd11+48];
	ld.f32 	%f110, [%rd11+44];
	ld.f32 	%f111, [%rd11+36];
	ld.f32 	%f112, [%rd11+40];
	ld.f32 	%f113, [%rd11+32];
	ld.f32 	%f114, [%rd11+28];
	ld.f32 	%f115, [%rd11+24];
	ld.f32 	%f116, [%rd11+20];
	ld.f32 	%f117, [%rd11+8];
	ld.f32 	%f118, [%rd11+16];
	ld.f32 	%f119, [%rd11+4];
	ld.f32 	%f120, [%rd11+12];
	ld.f32 	%f121, [%rd11];
	ld.global.u32 	%r14, [current_prd+120];
	mad.lo.s32 	%r15, %r14, 1664525, 1013904223;
	and.b32  	%r16, %r15, 16777215;
	cvt.rn.f32.u32	%f122, %r16;
	mov.f32 	%f123, 0f4B800000;
	div.approx.ftz.f32 	%f124, %f122, %f123;
	mad.lo.s32 	%r17, %r15, 1664525, 1013904223;
	st.global.u32 	[current_prd+120], %r17;
	and.b32  	%r18, %r17, 16777215;
	cvt.rn.f32.u32	%f125, %r18;
	div.approx.ftz.f32 	%f126, %f125, %f123;
	fma.rn.ftz.f32 	%f127, %f120, %f124, %f121;
	fma.rn.ftz.f32 	%f128, %f118, %f124, %f119;
	fma.rn.ftz.f32 	%f129, %f116, %f124, %f117;
	fma.rn.ftz.f32 	%f130, %f115, %f126, %f127;
	fma.rn.ftz.f32 	%f131, %f114, %f126, %f128;
	fma.rn.ftz.f32 	%f132, %f113, %f126, %f129;
	sub.ftz.f32 	%f133, %f130, %f1;
	sub.ftz.f32 	%f134, %f131, %f2;
	sub.ftz.f32 	%f135, %f132, %f3;
	mul.ftz.f32 	%f136, %f134, %f134;
	fma.rn.ftz.f32 	%f137, %f133, %f133, %f136;
	fma.rn.ftz.f32 	%f138, %f135, %f135, %f137;
	sqrt.approx.ftz.f32 	%f10, %f138;
	rcp.approx.ftz.f32 	%f139, %f10;
	mul.ftz.f32 	%f140, %f133, %f139;
	mul.ftz.f32 	%f141, %f134, %f139;
	mul.ftz.f32 	%f142, %f135, %f139;
	ld.global.v2.f32 	{%f143, %f144}, [shading_normal];
	mul.ftz.f32 	%f146, %f144, %f141;
	fma.rn.ftz.f32 	%f148, %f143, %f140, %f146;
	ld.global.f32 	%f149, [shading_normal+8];
	fma.rn.ftz.f32 	%f11, %f149, %f142, %f148;
	mul.ftz.f32 	%f150, %f112, %f141;
	fma.rn.ftz.f32 	%f151, %f111, %f140, %f150;
	fma.rn.ftz.f32 	%f12, %f110, %f142, %f151;
	mul.ftz.f32 	%f152, %f118, %f113;
	mul.ftz.f32 	%f153, %f116, %f114;
	sub.ftz.f32 	%f154, %f152, %f153;
	mul.ftz.f32 	%f155, %f116, %f115;
	mul.ftz.f32 	%f156, %f120, %f113;
	sub.ftz.f32 	%f157, %f155, %f156;
	mul.ftz.f32 	%f158, %f120, %f114;
	mul.ftz.f32 	%f159, %f118, %f115;
	sub.ftz.f32 	%f160, %f158, %f159;
	mul.ftz.f32 	%f161, %f157, %f157;
	fma.rn.ftz.f32 	%f162, %f154, %f154, %f161;
	fma.rn.ftz.f32 	%f13, %f160, %f160, %f162;
	setp.gt.ftz.f32	%p2, %f11, 0f00000000;
	setp.gt.ftz.f32	%p3, %f12, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB15_5;
	bra.uni 	BB15_4;

BB15_4:
	sqrt.approx.ftz.f32 	%f163, %f13;
	mul.ftz.f32 	%f164, %f11, %f12;
	mul.ftz.f32 	%f165, %f164, %f163;
	mul.ftz.f32 	%f166, %f10, 0f40490FDB;
	mul.ftz.f32 	%f167, %f166, %f10;
	div.approx.ftz.f32 	%f168, %f165, %f167;
	mul.ftz.f32 	%f169, %f7, %f168;
	mul.ftz.f32 	%f170, %f8, %f168;
	mul.ftz.f32 	%f171, %f9, %f168;
	fma.rn.ftz.f32 	%f204, %f169, 0f3D4CCCCD, %f204;
	fma.rn.ftz.f32 	%f203, %f170, 0f3D4CCCCD, %f203;
	fma.rn.ftz.f32 	%f202, %f171, 0f3D4CCCCD, %f202;

BB15_5:
	add.s64 	%rd2, %rd1, 1;
	add.s32 	%r22, %r22, 1;
	setp.lt.u32	%p5, %r22, %r1;
	mov.u64 	%rd17, %rd2;
	@%p5 bra 	BB15_3;

BB15_6:
	ld.global.u32 	%r19, [iterations];
	cvt.rn.f32.u32	%f175, %r19;
	ld.global.u32 	%r20, [max_iterations];
	cvt.rn.f32.u32	%f176, %r20;
	ld.global.v2.f32 	{%f177, %f178}, [orbitTrap];
	lg2.approx.ftz.f32 	%f180, %f177;
	ex2.approx.ftz.f32 	%f181, %f180;
	mov.f32 	%f182, 0f3DCCCCCD;
	sub.ftz.f32 	%f183, %f182, 0f3F2B851F;
	mov.f32 	%f184, 0f3E4CCCCD;
	sub.ftz.f32 	%f185, %f184, 0f3DCCCCCD;
	mov.f32 	%f186, 0f3F666666;
	sub.ftz.f32 	%f187, %f186, 0f3D4CCCCD;
	ld.global.f32 	%f188, [orbitTrap+8];
	mov.f32 	%f189, 0f3F800000;
	st.global.v4.f32 	[current_prd], {%f204, %f203, %f202, %f189};
	ld.global.v2.f32 	{%f190, %f191}, [shading_normal];
	ld.global.f32 	%f194, [shading_normal+8];
	st.global.v4.f32 	[current_prd+16], {%f190, %f191, %f194, %f1};
	st.global.v2.f32 	[current_prd+32], {%f2, %f3};
	ld.global.f32 	%f196, [t_hit];
	st.global.v2.f32 	[current_prd+56], {%f178, %f188};
	div.approx.ftz.f32 	%f197, %f175, %f176;
	st.global.v2.f32 	[current_prd+64], {%f196, %f197};
	ld.global.f32 	%f198, [orbitTrap];
	fma.rn.ftz.f32 	%f199, %f185, %f181, 0f3DCCCCCD;
	fma.rn.ftz.f32 	%f200, %f183, %f181, 0f3F2B851F;
	st.global.v2.f32 	[current_prd+40], {%f200, %f199};
	fma.rn.ftz.f32 	%f201, %f187, %f181, 0f3D4CCCCD;
	st.global.v2.f32 	[current_prd+48], {%f201, %f198};
	st.global.u32 	[current_prd+132], %r6;
	ret;
}

.visible .entry _Z4missv(

)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f00000000;
	st.global.v4.f32 	[current_prd], {%f1, %f1, %f1, %f1};
	st.global.v2.f32 	[current_prd+16], {%f1, %f1};
	mov.u32 	%r1, 0;
	st.global.u32 	[current_prd+24], %r1;
	st.global.u32 	[current_prd+36], %r1;
	st.global.u32 	[current_prd+32], %r1;
	st.global.u32 	[current_prd+28], %r1;
	mov.u32 	%r2, 1817103247;
	st.global.u32 	[current_prd+64], %r2;
	st.global.u32 	[current_prd+48], %r1;
	st.global.u32 	[current_prd+44], %r1;
	st.global.u32 	[current_prd+40], %r1;
	st.global.u32 	[current_prd+60], %r1;
	st.global.u32 	[current_prd+56], %r1;
	st.global.u32 	[current_prd+52], %r1;
	st.global.u32 	[current_prd+68], %r1;
	mov.u32 	%r3, 1;
	st.global.u32 	[current_prd+132], %r3;
	ret;
}

.visible .entry _Z16chrome_ah_shadowv(

)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 0;
	st.global.u32 	[prd_radiance+116], %r1;
	st.global.u32 	[prd_radiance+112], %r1;
	st.global.u32 	[prd_radiance+108], %r1;
	ret;
}

.visible .entry _Z11envmap_missv(

)
{
	.reg .pred 	%p<13>;
	.reg .s32 	%r<15>;
	.reg .f32 	%f<89>;
	.reg .s64 	%rd<12>;


	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f10, [%rd2];
	add.s64 	%rd3, %rd1, 20;
	ldu.global.f32 	%f11, [%rd3];
	abs.ftz.f32 	%f1, %f11;
	abs.ftz.f32 	%f2, %f10;
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	setp.eq.ftz.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f11;
	mov.b32 	 %r3, %f10;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB18_4;

	setp.eq.ftz.f32	%p4, %f1, 0f7F800000;
	setp.eq.ftz.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB18_3;

	max.ftz.f32 	%f12, %f2, %f1;
	min.ftz.f32 	%f13, %f2, %f1;
	div.full.ftz.f32 	%f14, %f13, %f12;
	mul.rn.ftz.f32 	%f15, %f14, %f14;
	mov.f32 	%f16, 0fC0B59883;
	mov.f32 	%f17, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f18, %f15, %f17, %f16;
	mov.f32 	%f19, 0fC0D21907;
	fma.rn.ftz.f32 	%f20, %f18, %f15, %f19;
	mul.ftz.f32 	%f21, %f20, %f15;
	mul.ftz.f32 	%f22, %f21, %f14;
	add.ftz.f32 	%f23, %f15, 0f41355DC0;
	mov.f32 	%f24, 0f41E6BD60;
	fma.rn.ftz.f32 	%f25, %f23, %f15, %f24;
	mov.f32 	%f26, 0f419D92C8;
	fma.rn.ftz.f32 	%f27, %f25, %f15, %f26;
	rcp.approx.ftz.f32 	%f28, %f27;
	fma.rn.ftz.f32 	%f29, %f22, %f28, %f14;
	mov.f32 	%f30, 0f3FC90FDB;
	sub.ftz.f32 	%f31, %f30, %f29;
	setp.gt.ftz.f32	%p7, %f2, %f1;
	selp.f32	%f32, %f31, %f29, %p7;
	mov.f32 	%f33, 0f40490FDB;
	sub.ftz.f32 	%f34, %f33, %f32;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f35, %f34, %f32, %p8;
	mov.b32 	 %r4, %f35;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f36, %r5;
	add.ftz.f32 	%f37, %f1, %f2;
	setp.gtu.ftz.f32	%p9, %f37, 0f7F800000;
	selp.f32	%f87, %f37, %f36, %p9;
	bra.uni 	BB18_5;

BB18_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f87, %r9;
	bra.uni 	BB18_5;

BB18_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f87, %r12;

BB18_5:
	mov.u32 	%r13, 1;
	st.global.u32 	[current_prd+132], %r13;
	mov.u64 	%rd4, current_prd;
	add.s64 	%rd5, %rd4, 124;
	ldu.global.u32 	%r14, [%rd5];
	setp.gt.s32	%p10, %r14, 0;
	@%p10 bra 	BB18_7;

	mov.u64 	%rd6, bg_color;
	add.s64 	%rd7, %rd6, 4;
	add.s64 	%rd8, %rd6, 8;
	ldu.global.f32 	%f88, [%rd8];
	ldu.global.f32 	%f38, [%rd7];
	ldu.global.f32 	%f39, [bg_color];
	st.global.v2.f32 	[current_prd], {%f39, %f38};
	bra.uni 	BB18_8;

BB18_7:
	add.s64 	%rd11, %rd1, 16;
	ldu.global.f32 	%f46, [%rd11];
	abs.ftz.f32 	%f47, %f46;
	mov.f32 	%f48, 0f3F800000;
	sub.ftz.f32 	%f49, %f48, %f47;
	mul.ftz.f32 	%f50, %f49, 0f3F000000;
	sqrt.approx.ftz.f32 	%f51, %f50;
	setp.gt.ftz.f32	%p11, %f47, 0f3F11EB85;
	selp.f32	%f52, %f51, %f47, %p11;
	mul.ftz.f32 	%f53, %f52, %f52;
	mov.f32 	%f54, 0f3C94D2E9;
	mov.f32 	%f55, 0f3D53F941;
	fma.rn.ftz.f32 	%f56, %f55, %f53, %f54;
	mov.f32 	%f57, 0f3D3F841F;
	fma.rn.ftz.f32 	%f58, %f56, %f53, %f57;
	mov.f32 	%f59, 0f3D994929;
	fma.rn.ftz.f32 	%f60, %f58, %f53, %f59;
	mov.f32 	%f61, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f62, %f60, %f53, %f61;
	mul.ftz.f32 	%f63, %f62, %f53;
	fma.rn.ftz.f32 	%f64, %f63, %f52, %f52;
	add.ftz.f32 	%f65, %f64, %f64;
	mov.f32 	%f66, 0f3FC90FDB;
	sub.ftz.f32 	%f67, %f66, %f64;
	selp.f32	%f68, %f65, %f67, %p11;
	setp.lt.ftz.f32	%p12, %f46, 0f00000000;
	mov.f32 	%f69, 0f40490FDB;
	sub.ftz.f32 	%f70, %f69, %f68;
	selp.f32	%f71, %f70, %f68, %p12;
	sub.ftz.f32 	%f72, %f66, %f71;
	add.ftz.f32 	%f73, %f87, 0f40490FDB;
	mul.ftz.f32 	%f44, %f73, 0f3E22F983;
	sin.approx.ftz.f32 	%f74, %f72;
	add.ftz.f32 	%f75, %f74, 0f3F800000;
	mul.ftz.f32 	%f45, %f75, 0f3F000000;
	// inline asm
	tex.2d.v4.f32.f32 {%f40, %f41, %f42, %f43}, [envmap, {%f44, %f45}];
	// inline asm
	ld.global.v4.f32 	{%f76, %f77, %f78, %f79}, [current_prd];
	fma.rn.ftz.f32 	%f88, %f42, 0f3E99999A, %f78;
	fma.rn.ftz.f32 	%f82, %f41, 0f3E99999A, %f77;
	fma.rn.ftz.f32 	%f84, %f40, 0f3E99999A, %f76;
	st.global.v2.f32 	[current_prd], {%f84, %f82};

BB18_8:
	mov.f32 	%f85, 0f00000000;
	st.global.v2.f32 	[current_prd+8], {%f88, %f85};
	st.global.v2.f32 	[current_prd+16], {%f85, %f85};
	st.global.v2.f32 	[current_prd+32], {%f85, %f85};
	st.global.v2.f32 	[current_prd+24], {%f85, %f85};
	st.global.v2.f32 	[current_prd+48], {%f85, %f85};
	st.global.v2.f32 	[current_prd+40], {%f85, %f85};
	st.global.v2.f32 	[current_prd+56], {%f85, %f85};
	mov.f32 	%f86, 0f6C4ECB8F;
	st.global.v2.f32 	[current_prd+64], {%f86, %f85};
	ret;
}

.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	ret;
}

.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}

.visible .func _ZN5optix6MatrixILj4ELj4EEC2Ev(
	.param .b64 _ZN5optix6MatrixILj4ELj4EEC2Ev_param_0
)
{



	ret;
}

.visible .func _ZN5optix22boundCallableProgramIdIF6float46float3ifEEC2Ev(
	.param .b64 _ZN5optix22boundCallableProgramIdIF6float46float3ifEEC2Ev_param_0
)
{



	ret;
}

.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float46float3ifNS_9CPArgVoidES3_S3_S3_S3_S3_S3_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float46float3ifNS_9CPArgVoidES3_S3_S3_S3_S3_S3_EC2Ev_param_0
)
{



	ret;
}


