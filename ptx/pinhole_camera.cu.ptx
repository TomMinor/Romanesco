//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Fri Aug  1 03:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64

.global .align 4 .b8 normalmatrix[64];
.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 output_buffer_nrm[1];
.global .align 1 .b8 output_buffer_depth[1];
.global .align 1 .b8 output_buffer_world[1];
.global .align 8 .b8 top_object[4];
.global .align 4 .u32 radiance_ray_type;
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 time_view_scale = 0f358637BD;
.global .align 4 .b8 _ZN21rti_internal_typeinfo12normalmatrixE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15time_view_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12normalmatrixE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15time_view_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12normalmatrixE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15time_view_scaleE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12normalmatrixE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15time_view_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12normalmatrixE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15time_view_scaleE[1];
.global .align 1 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 8 .b8 	__local_depot0[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<38>;
	.reg .f32 	%f<77>;
	.reg .s64 	%rd<48>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd1;
	ldu.global.v2.u32 	{%r12, %r13}, [launch_index];
	cvt.rn.f32.u32	%f9, %r12;
	cvt.rn.f32.u32	%f10, %r13;
	ldu.global.v2.u32 	{%r16, %r17}, [launch_dim];
	cvt.rn.f32.u32	%f11, %r16;
	cvt.rn.f32.u32	%f12, %r17;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.f32 	%f3, [eye+8];
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ldu.global.f32 	%f19, [U];
	mov.u64 	%rd27, U;
	add.s64 	%rd28, %rd27, 4;
	ldu.global.f32 	%f20, [%rd28];
	add.s64 	%rd29, %rd27, 8;
	ldu.global.f32 	%f21, [%rd29];
	ldu.global.f32 	%f22, [V];
	mul.ftz.f32 	%f23, %f22, %f16;
	mov.u64 	%rd30, V;
	add.s64 	%rd31, %rd30, 4;
	ldu.global.f32 	%f24, [%rd31];
	mul.ftz.f32 	%f25, %f24, %f16;
	add.s64 	%rd32, %rd30, 8;
	ldu.global.f32 	%f26, [%rd32];
	mul.ftz.f32 	%f27, %f26, %f16;
	fma.rn.ftz.f32 	%f28, %f19, %f15, %f23;
	fma.rn.ftz.f32 	%f29, %f20, %f15, %f25;
	fma.rn.ftz.f32 	%f30, %f21, %f15, %f27;
	ldu.global.f32 	%f31, [W];
	add.ftz.f32 	%f32, %f28, %f31;
	mov.u64 	%rd33, W;
	add.s64 	%rd34, %rd33, 4;
	ldu.global.f32 	%f33, [%rd34];
	add.ftz.f32 	%f34, %f29, %f33;
	add.s64 	%rd35, %rd33, 8;
	ldu.global.f32 	%f35, [%rd35];
	add.ftz.f32 	%f36, %f30, %f35;
	ldu.global.f32 	%f37, [normalmatrix];
	fma.rn.ftz.f32 	%f38, %f32, %f37, 0f00000000;
	mov.u64 	%rd36, normalmatrix;
	add.s64 	%rd37, %rd36, 16;
	ldu.global.f32 	%f39, [%rd37];
	fma.rn.ftz.f32 	%f40, %f34, %f39, %f38;
	add.s64 	%rd38, %rd36, 32;
	ldu.global.f32 	%f41, [%rd38];
	fma.rn.ftz.f32 	%f42, %f36, %f41, %f40;
	add.s64 	%rd39, %rd36, 48;
	ldu.global.f32 	%f43, [%rd39];
	fma.rn.ftz.f32 	%f44, %f43, 0f3F800000, %f42;
	add.s64 	%rd40, %rd36, 4;
	ldu.global.f32 	%f45, [%rd40];
	fma.rn.ftz.f32 	%f46, %f32, %f45, 0f00000000;
	add.s64 	%rd41, %rd36, 20;
	ldu.global.f32 	%f47, [%rd41];
	fma.rn.ftz.f32 	%f48, %f34, %f47, %f46;
	add.s64 	%rd42, %rd36, 36;
	ldu.global.f32 	%f49, [%rd42];
	fma.rn.ftz.f32 	%f50, %f36, %f49, %f48;
	add.s64 	%rd43, %rd36, 52;
	ldu.global.f32 	%f51, [%rd43];
	fma.rn.ftz.f32 	%f52, %f51, 0f3F800000, %f50;
	add.s64 	%rd44, %rd36, 8;
	ldu.global.f32 	%f53, [%rd44];
	fma.rn.ftz.f32 	%f54, %f32, %f53, 0f00000000;
	add.s64 	%rd45, %rd36, 24;
	ldu.global.f32 	%f55, [%rd45];
	fma.rn.ftz.f32 	%f56, %f34, %f55, %f54;
	add.s64 	%rd46, %rd36, 40;
	ldu.global.f32 	%f57, [%rd46];
	fma.rn.ftz.f32 	%f58, %f36, %f57, %f56;
	add.s64 	%rd47, %rd36, 56;
	ldu.global.f32 	%f59, [%rd47];
	fma.rn.ftz.f32 	%f60, %f59, 0f3F800000, %f58;
	mul.ftz.f32 	%f61, %f52, %f52;
	fma.rn.ftz.f32 	%f62, %f44, %f44, %f61;
	fma.rn.ftz.f32 	%f63, %f60, %f60, %f62;
	sqrt.approx.ftz.f32 	%f64, %f63;
	rcp.approx.ftz.f32 	%f65, %f64;
	mul.ftz.f32 	%f4, %f44, %f65;
	mul.ftz.f32 	%f5, %f52, %f65;
	mul.ftz.f32 	%f6, %f60, %f65;
	ldu.global.u32 	%r2, [radiance_ray_type];
	ldu.global.f32 	%f7, [scene_epsilon];
	mov.u32 	%r20, 1065353216;
	st.local.u32 	[%rd26+40], %r20;
	mov.u32 	%r21, 0;
	st.local.u32 	[%rd26+44], %r21;
	ldu.global.u32 	%r1, [top_object];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r3, 48;
	// inline asm
	call _rt_trace_64, (%r1, %f17, %f18, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	cvta.global.u64 	%rd3, output_buffer;
	ld.global.v2.u32 	{%r22, %r23}, [launch_index];
	cvt.u64.u32	%rd4, %r22;
	cvt.u64.u32	%rd5, %r23;
	mov.u32 	%r10, 2;
	mov.u32 	%r11, 16;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r10, %r11, %rd4, %rd5, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f66, [%rd26+8];
	ld.local.f32 	%f67, [%rd26+4];
	ld.local.f32 	%f68, [%rd26];
	mov.f32 	%f69, 0f3F800000;
	st.v4.f32 	[%rd2], {%f68, %f67, %f66, %f69};
	cvta.global.u64 	%rd9, output_buffer_nrm;
	ld.global.v2.u32 	{%r26, %r27}, [launch_index];
	cvt.u64.u32	%rd10, %r26;
	cvt.u64.u32	%rd11, %r27;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r10, %r11, %rd10, %rd11, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f70, [%rd26+20];
	ld.local.f32 	%f71, [%rd26+16];
	ld.local.f32 	%f72, [%rd26+12];
	st.v4.f32 	[%rd8], {%f72, %f71, %f70, %f69};
	cvta.global.u64 	%rd15, output_buffer_depth;
	ld.global.v2.u32 	{%r30, %r31}, [launch_index];
	cvt.u64.u32	%rd16, %r30;
	cvt.u64.u32	%rd17, %r31;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r10, %r11, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f73, [%rd26+36];
	st.v4.f32 	[%rd14], {%f73, %f73, %f73, %f69};
	cvta.global.u64 	%rd21, output_buffer_world;
	ld.global.v2.u32 	{%r34, %r35}, [launch_index];
	cvt.u64.u32	%rd22, %r34;
	cvt.u64.u32	%rd23, %r35;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r10, %r11, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.local.f32 	%f74, [%rd26+32];
	ld.local.f32 	%f75, [%rd26+28];
	ld.local.f32 	%f76, [%rd26+24];
	st.v4.f32 	[%rd20], {%f76, %f75, %f74, %f69};
	ret;
}

.visible .entry _Z10env_camerav(

)
{
	.local .align 8 .b8 	__local_depot1[48];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<18>;
	.reg .f32 	%f<111>;
	.reg .s64 	%rd<14>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd13, %rd6;
	cvta.global.u64 	%rd8, output_buffer;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd8, %r6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r8, %r9}, [launch_index];
	cvt.rn.f32.u32	%f9, %r8;
	cvt.rn.f32.u32	%f10, %r9;
	cvt.rn.f32.u64	%f11, %rd1;
	cvt.rn.f32.u64	%f12, %rd2;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40C90FDB, 0f40490FDB;
	fma.rn.ftz.f32 	%f16, %f14, 0f40490FDB, 0f00000000;
	cos.approx.ftz.f32 	%f17, %f15;
	sin.approx.ftz.f32 	%f18, %f16;
	mul.ftz.f32 	%f19, %f17, %f18;
	cos.approx.ftz.f32 	%f20, %f16;
	sin.approx.ftz.f32 	%f21, %f15;
	mul.ftz.f32 	%f22, %f21, %f18;
	ld.global.f32 	%f3, [eye+8];
	ld.global.v2.f32 	{%f23, %f24}, [eye];
	ld.global.f32 	%f25, [U];
	ld.global.f32 	%f26, [U+4];
	mul.ftz.f32 	%f27, %f26, %f26;
	fma.rn.ftz.f32 	%f28, %f25, %f25, %f27;
	ld.global.f32 	%f29, [U+8];
	fma.rn.ftz.f32 	%f30, %f29, %f29, %f28;
	sqrt.approx.ftz.f32 	%f31, %f30;
	rcp.approx.ftz.f32 	%f32, %f31;
	mul.ftz.f32 	%f33, %f25, %f32;
	mul.ftz.f32 	%f34, %f26, %f32;
	mul.ftz.f32 	%f35, %f29, %f32;
	mul.ftz.f32 	%f36, %f33, %f19;
	mul.ftz.f32 	%f37, %f34, %f19;
	mul.ftz.f32 	%f38, %f35, %f19;
	ld.global.f32 	%f39, [V];
	ld.global.f32 	%f40, [V+4];
	mul.ftz.f32 	%f41, %f40, %f40;
	fma.rn.ftz.f32 	%f42, %f39, %f39, %f41;
	ld.global.f32 	%f43, [V+8];
	fma.rn.ftz.f32 	%f44, %f43, %f43, %f42;
	sqrt.approx.ftz.f32 	%f45, %f44;
	rcp.approx.ftz.f32 	%f46, %f45;
	mul.ftz.f32 	%f47, %f39, %f46;
	mul.ftz.f32 	%f48, %f40, %f46;
	mul.ftz.f32 	%f49, %f43, %f46;
	mul.ftz.f32 	%f50, %f47, %f20;
	sub.ftz.f32 	%f51, %f36, %f50;
	mul.ftz.f32 	%f52, %f48, %f20;
	sub.ftz.f32 	%f53, %f37, %f52;
	mul.ftz.f32 	%f54, %f49, %f20;
	sub.ftz.f32 	%f55, %f38, %f54;
	ld.global.f32 	%f56, [W];
	ld.global.f32 	%f57, [W+4];
	mul.ftz.f32 	%f58, %f57, %f57;
	fma.rn.ftz.f32 	%f59, %f56, %f56, %f58;
	ld.global.f32 	%f60, [W+8];
	fma.rn.ftz.f32 	%f61, %f60, %f60, %f59;
	sqrt.approx.ftz.f32 	%f62, %f61;
	rcp.approx.ftz.f32 	%f63, %f62;
	mul.ftz.f32 	%f64, %f56, %f63;
	mul.ftz.f32 	%f65, %f57, %f63;
	mul.ftz.f32 	%f66, %f60, %f63;
	fma.rn.ftz.f32 	%f67, %f64, %f22, %f51;
	fma.rn.ftz.f32 	%f68, %f65, %f22, %f53;
	fma.rn.ftz.f32 	%f69, %f66, %f22, %f55;
	mul.ftz.f32 	%f70, %f68, %f68;
	fma.rn.ftz.f32 	%f71, %f67, %f67, %f70;
	fma.rn.ftz.f32 	%f72, %f69, %f69, %f71;
	sqrt.approx.ftz.f32 	%f73, %f72;
	rcp.approx.ftz.f32 	%f74, %f73;
	mul.ftz.f32 	%f75, %f67, %f74;
	mul.ftz.f32 	%f76, %f68, %f74;
	mul.ftz.f32 	%f77, %f69, %f74;
	ld.global.f32 	%f78, [normalmatrix];
	fma.rn.ftz.f32 	%f79, %f75, %f78, 0f00000000;
	ld.global.f32 	%f80, [normalmatrix+16];
	fma.rn.ftz.f32 	%f81, %f76, %f80, %f79;
	ld.global.f32 	%f82, [normalmatrix+32];
	fma.rn.ftz.f32 	%f83, %f77, %f82, %f81;
	ld.global.f32 	%f84, [normalmatrix+48];
	fma.rn.ftz.f32 	%f85, %f84, 0f3F800000, %f83;
	ld.global.f32 	%f86, [normalmatrix+4];
	fma.rn.ftz.f32 	%f87, %f75, %f86, 0f00000000;
	ld.global.f32 	%f88, [normalmatrix+20];
	fma.rn.ftz.f32 	%f89, %f76, %f88, %f87;
	ld.global.f32 	%f90, [normalmatrix+36];
	fma.rn.ftz.f32 	%f91, %f77, %f90, %f89;
	ld.global.f32 	%f92, [normalmatrix+52];
	fma.rn.ftz.f32 	%f93, %f92, 0f3F800000, %f91;
	ld.global.f32 	%f94, [normalmatrix+8];
	fma.rn.ftz.f32 	%f95, %f75, %f94, 0f00000000;
	ld.global.f32 	%f96, [normalmatrix+24];
	fma.rn.ftz.f32 	%f97, %f76, %f96, %f95;
	ld.global.f32 	%f98, [normalmatrix+40];
	fma.rn.ftz.f32 	%f99, %f77, %f98, %f97;
	ld.global.f32 	%f100, [normalmatrix+56];
	fma.rn.ftz.f32 	%f101, %f100, 0f3F800000, %f99;
	mul.ftz.f32 	%f102, %f93, %f93;
	fma.rn.ftz.f32 	%f103, %f85, %f85, %f102;
	fma.rn.ftz.f32 	%f104, %f101, %f101, %f103;
	sqrt.approx.ftz.f32 	%f105, %f104;
	rcp.approx.ftz.f32 	%f106, %f105;
	mul.ftz.f32 	%f4, %f85, %f106;
	mul.ftz.f32 	%f5, %f93, %f106;
	mul.ftz.f32 	%f6, %f101, %f106;
	ld.global.u32 	%r4, [radiance_ray_type];
	ld.global.f32 	%f7, [scene_epsilon];
	mov.u32 	%r12, 1065353216;
	st.local.u32 	[%rd13+40], %r12;
	mov.u32 	%r13, 0;
	st.local.u32 	[%rd13+44], %r13;
	ld.global.u32 	%r3, [top_object];
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r5, 48;
	// inline asm
	call _rt_trace_64, (%r3, %f23, %f24, %f3, %f4, %f5, %f6, %r4, %f7, %f8, %rd6, %r5);
	// inline asm
	ld.global.v2.u32 	{%r14, %r15}, [launch_index];
	cvt.u64.u32	%rd9, %r14;
	cvt.u64.u32	%rd10, %r15;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f107, [%rd13+8];
	ld.local.f32 	%f108, [%rd13+4];
	ld.local.f32 	%f109, [%rd13];
	mov.f32 	%f110, 0f00000000;
	st.v4.f32 	[%rd7], {%f109, %f108, %f107, %f110};
	ret;
}

.visible .entry _Z9exceptionv(

)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<31>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<17>;


	// inline asm
	call (%r5), _rt_get_exception_code, ();
	// inline asm
	cvta.global.u64 	%rd1, $str;
	ld.global.v2.u32 	{%r7, %r8}, [launch_index];
	// inline asm
	call (%r6), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r6, 0;
	mov.u64 	%rd16, $str;
	@%p1 bra 	BB2_5;

	mov.u64 	%rd15, %rd1;

BB2_2:
	mov.u64 	%rd3, %rd16;
	mov.u64 	%rd2, %rd15;
	add.s64 	%rd4, %rd2, 1;
	add.s64 	%rd16, %rd3, 1;
	ld.global.u8 	%rs1, [%rd3+1];
	setp.ne.s16	%p2, %rs1, 0;
	mov.u64 	%rd15, %rd4;
	@%p2 bra 	BB2_2;

	sub.s64 	%rd8, %rd4, %rd1;
	cvt.u32.u64	%r11, %rd8;
	add.s32 	%r12, %r11, 32;
	and.b32  	%r10, %r12, -4;
	// inline asm
	call (%r9), _rt_print_start_64, (%rd1, %r10);
	// inline asm
	setp.eq.s32	%p3, %r9, 0;
	@%p3 bra 	BB2_5;

	mov.u32 	%r21, 0;
	// inline asm
	call (), _rt_print_write32, (%r21, %r9);
	// inline asm
	add.s32 	%r16, %r9, 4;
	// inline asm
	call (), _rt_print_write32, (%r5, %r16);
	// inline asm
	add.s32 	%r18, %r9, 8;
	// inline asm
	call (), _rt_print_write32, (%r21, %r18);
	// inline asm
	add.s32 	%r20, %r9, 12;
	// inline asm
	call (), _rt_print_write32, (%r7, %r20);
	// inline asm
	add.s32 	%r22, %r9, 16;
	// inline asm
	call (), _rt_print_write32, (%r21, %r22);
	// inline asm
	add.s32 	%r24, %r9, 20;
	// inline asm
	call (), _rt_print_write32, (%r8, %r24);
	// inline asm

BB2_5:
	cvta.global.u64 	%rd10, output_buffer;
	ld.global.v2.u32 	{%r27, %r28}, [launch_index];
	cvt.u64.u32	%rd11, %r27;
	cvt.u64.u32	%rd12, %r28;
	mov.u32 	%r25, 2;
	mov.u32 	%r26, 16;
	mov.u64 	%rd14, 0;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r25, %r26, %rd11, %rd12, %rd14, %rd14);
	// inline asm
	mov.f32 	%f1, 0f3F800000;
	ld.global.f32 	%f2, [bad_color+8];
	ld.global.f32 	%f3, [bad_color+4];
	ld.global.f32 	%f4, [bad_color];
	st.v4.f32 	[%rd9], {%f4, %f3, %f2, %f1};
	ret;
}

.visible .func _ZN5optix6MatrixILj4ELj4EEC2Ev(
	.param .b64 _ZN5optix6MatrixILj4ELj4EEC2Ev_param_0
)
{



	ret;
}


